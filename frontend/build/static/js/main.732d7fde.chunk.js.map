{"version":3,"sources":["reducers/index.js","reducers/user_reducer.js","reducers/societes_reducer.js","reducers/formulaires_reducer.js","actions/index.js","components/societeQuickView/formulairesQuickView.js","containers/homeContainer.js","containers/loginContainer.js","components/logout.js","containers/addSociete.js","components/formulaires/editFormulaire.js","containers/editFormulaireContainer.js","components/formulaires/addFormulaire.js","containers/addFormulaireContainer.js","containers/register.js","containers/societeGraphContainer.js","components/userSelector/userSelector.js","components/userSelector/userList.js","containers/societeContainer.js","containers/csvTestContainer.js","components/header/sidenav/sidenav_items.js","components/header/sidenav/sidenav.js","components/header/connectedUser.js","components/header/header.js","hoc/layout.js","hoc/auth.js","routes.js","index.js"],"names":["rootReducers","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","login","payload","users","register","success","societes","list","societe","newSociete","updateSociete","doc","deleted","formulaires","formulaire","newFormulaire","updateFormulaire","getUsers","axios","get","then","response","data","getSociete","Id","params","id","getFormulairesBySociete","societeId","order","map","fData","EBITDA","CA","FA","CS","FG","AF","addFormulaire","post","FormulairesQuickView","props","handleFormulaireEdit","history","push","concat","isUserSocAdmin","admins","some","adm","react_default","a","createElement","className","adresse","PDC","es","to","_id","react_fontawesome_lib_default","name","style","display","item","key","Date","date","toLocaleDateString","onClick","HomeContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelectSociete","event","setState","selectedSocieteId","target","value","dispatch","renderSocietes","getSelectedSociete","filter","htmlFor","onChange","assign","Component","connect","LoginContainer","handleInputEmail","email","handleInputPassword","password","submitForm","e","preventDefault","_ref","loginUser","error","nextProps","isAuth","onSubmit","placeholder","message","Logout","request","setTimeout","AddSocieteContainer","formData","handleChange","newFormData","_this2","EditFormulaire","convertDateToHtml","inDate","tmpMonth","getMonth","slice","tmpDay","getDate","getFullYear","handleNumInput","numValue","parseInt","tmpState","handleDateInput","defineProperty","console","log","reqFormulaire","elem","toJSON","saveFormulaire","CCT","CLT","CF","Inv","disabled","deleteFormulaire","EditFormulaireContainer","sendUpdateFormulaire","window","confirm","delete","match","res","editFormulaire","renderFormulaire","AddFormulaire","handleNum","formId","handleDate","AddFormulaireContainer","form","SaveAllChanges","i","defaultFormulaire","formulaires_addFormulaire","renderFormulaires","Register","privileges","handleInputPrivileges","userList","_ref2","toConsumableArray","userRegister","showUsers","PureComponent","SocieteGraphContainer","toShow","tmpData","checked","formFields","keys","handleFieldSelect","_this3","linesColor","renderLines","Line","dataKey","stroke","ResponsiveContainer","width","aspect","LineChart","height","margin","top","right","left","bottom","XAxis","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","renderFieldSelect","renderGraph","UserSelector","handleInput","tmpUsers","usr","returnUser","children","UserList","header","SocieteContainer","addSocAdmin","u","addSocUser","getUsersById","usersId","uid","deleteSociete","userSelector","userSelector_userList","CsvTestContainer","handleselectedFile","selectedFile","files","loaded","FormData","append","onUploadProgress","ProgressEvent","total","getFormulairesCsv","Math","round","items","icon","text","link","restricted","admin","exclude","element","onHideNav","Nav","simple_sidenav_default","showNav","navStyle","background","maxWidth","sidenav_items","Header","sidenav","color","padding","cursor","connectedUser","Layout","hoc_auth","ComposedClass","reload","AuthenticationCheck","_Component","loading","inherits","createClass","Routes","layout","path","exact","component","Auth","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","react_redux_es","store","reducers","routes","document","getElementById"],"mappings":"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","file":"static/js/main.732d7fde.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport user from './user_reducer.js';\r\nimport societes from './societes_reducer.js';\r\nimport formulaires from './formulaires_reducer.js';\r\n\r\nconst rootReducers = combineReducers({\r\n    user,\r\n    societes,\r\n    formulaires\r\n})\r\n\r\nexport default rootReducers;","export default function(state={},action){\r\n    switch(action.type){\r\n        case 'USER_LOGIN':\r\n            return {...state,login:action.payload}\r\n        case 'USER_AUTH':\r\n            return {...state,login:action.payload}\r\n        case 'GET_USER':\r\n            return {...state,users:action.payload}\r\n        case 'USER_REGISTER':\r\n            return {\r\n                ...state,\r\n                register:action.payload.success,\r\n                users:action.payload.users\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function(state={},action){\r\n    switch(action.type){\r\n        case 'GET_SOCIETES':\r\n            return {...state, list:action.payload};\r\n        case 'CLEAR_SOCIETES':\r\n            return {...state, list:action.payload};\r\n        case 'GET_SOCIETE':\r\n            return {...state, societe:action.payload};\r\n        case 'ADD_SOCIETE':\r\n            return {...state, newSociete:action.payload};\r\n        case 'CLEAR_NEWSOCIETE':\r\n            return {...state, newSociete:action.payload};\r\n        case 'UPDATE_SOCIETE':\r\n            return {\r\n                    ...state,\r\n                    updateSociete:action.payload.success,\r\n                    societe:action.payload.doc\r\n                    };\r\n        case 'DELETE_SOCIETE':\r\n            return {...state, deleted:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function(state={},action){\r\n    switch(action.type){\r\n        case 'GET_FORMULAIRESBYSOCIETE':\r\n            return {...state, list:action.payload}\r\n        case 'GET_FORMULAIRE':\r\n            return {...state, formulaire:action.payload}\r\n        case 'CLEAR_FORMULAIRE':\r\n            return {...state, list:action.payload};\r\n        case 'ADD_FORMULAIRE':\r\n            return {...state, newFormulaire:action.payload};\r\n        case 'CLEAR_NEWFORMULAIRE':\r\n            return {...state, newFormulaire:action.payload};\r\n        case 'UPDATE_FORMULAIRE':\r\n            return {\r\n                    ...state,\r\n                    updateFormulaire:action.payload.success,\r\n                    formulaire:action.payload.doc\r\n                    };\r\n        case 'DELETE_FORMULAIRE':\r\n            return {...state, deleted:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\n//USER\r\nexport function loginUser({email,password}){\r\n    const request = axios.post('/api/login',{email,password})\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type:'USER_LOGIN',\r\n        payload:request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get('/api/auth')\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type:'USER_AUTH',\r\n        payload:request\r\n    }\r\n\r\n}\r\n\r\nexport function getUsers(){\r\n    const request = axios.get(`/api/users`)\r\n                    .then(response => response.data);\r\n        \r\n    return {\r\n        type:'GET_USER',\r\n        payload:request\r\n    }\r\n}\r\n\r\n\r\nexport function userRegister(user,userList){\r\n    const request = axios.post(`/api/register`,user);\r\n\r\n    return (dispatch) =>{\r\n        request.then(({data})=>{\r\n            let users = data.success ? [...userList,data.user]:userList;\r\n            let response = {\r\n                success:data.success,\r\n                users\r\n            }\r\n\r\n            dispatch({\r\n                type:'USER_REGISTER',\r\n                payload:response\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n//SOCIETE\r\nexport function getSocietes(){\r\n    const request = axios.get('/api/societesByUser').then(response => response.data);\r\n    //console.log(`/api/societesByUser?id=${userId}`);\r\n\r\n    return {\r\n        type: 'GET_SOCIETES',\r\n        payload: request\r\n    }\r\n}\r\nexport function clearSocietes(){\r\n    return {\r\n        type: 'CLEAR_SOCIETES',\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function getSociete(Id){\r\n    const request = axios.get('/api/getSociete', {\r\n        params: {\r\n            id: Id\r\n        }\r\n    }).then(response => response.data);\r\n\r\n    return {\r\n        type: 'GET_SOCIETE',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addSociete(societe){\r\n    const request = axios.post('/api/societe',societe)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type:'ADD_SOCIETE',\r\n        payload:request\r\n    }\r\n}\r\nexport function clearNewSociete(){\r\n    return {\r\n        type: 'CLEAR_NEWSOCIETE',\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function updateSociete(data){\r\n    const request = axios.post(`/api/updateSociete`,data)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type:'UPDATE_SOCIETE',\r\n        payload:request\r\n    }\r\n}\r\n\r\nexport function deleteSociete(id){\r\n    const request = axios.delete(`/api/deleteSociete?id=${id}`)\r\n                    .then(response => response.data);\r\n\r\n    return {\r\n        type:'DELETE_SOCIETE',\r\n        payload:request\r\n    }\r\n}\r\n\r\n//FORMULAIRE\r\nexport function getFormulairesBySociete(societeId, order){\r\n    const request = axios.get('/api/formulairesBySociete', {\r\n        params: {\r\n            id: societeId,\r\n            order: order\r\n        }\r\n    }).then(response => {\r\n        return( response.data.map(fData => {\r\n            return({\r\n                ...fData,\r\n                EBITDA: fData.CA - fData.FA - fData.CS - fData.FG - fData.AF\r\n            })\r\n        }))\r\n    });\r\n\r\n    return {\r\n        type: 'GET_FORMULAIRESBYSOCIETE',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getFormulaire(id){\r\n    const request = axios.get('/api/getFormulaire', {\r\n        params: {\r\n            id: id\r\n        }\r\n    }).then(response => {\r\n        const fData = response.data;\r\n            return({\r\n                ...fData,\r\n                EBITDA: fData.CA - fData.FA - fData.CS - fData.FG - fData.AF\r\n            })\r\n    });\r\n\r\n    return {\r\n        type: 'GET_FORMULAIRE',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearFormulaires(){\r\n    return {\r\n        type: 'CLEAR_FORMULAIRES',\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function addFormulaire(formulaire){\r\n    const request = axios.post('/api/formulaire',formulaire)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type:'ADD_FORMULAIRE',\r\n        payload:request\r\n    }\r\n}\r\nexport function clearNewFormulaire(){\r\n    return {\r\n        type: 'CLEAR_NEWFORMULAIRE',\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function updateFormulaire(data){\r\n    const request = axios.post(`/api/updateFormulaire`,data)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type:'UPDATE_FORMULAIRE',\r\n        payload:request\r\n    }\r\n}\r\n\r\nexport function deleteFormulaire(id){\r\n    const request = axios.delete(`/api/deleteFormulaire?id=${id}`)\r\n                    .then(response => response.data);\r\n\r\n    return {\r\n        type:'DELETE_FORMULAIRE',\r\n        payload:request\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\n\r\nexport default function FormulairesQuickView(props) {\r\n\r\n    const renderFormulaireQuick = (formulaires) => {\r\n        return(\r\n            formulaires.list ?\r\n\r\n            formulaires.list.map( (item) => {\r\n                return(\r\n                    <tr key={item._id}>\r\n                        <td className=\"Date\">{new Date(item.date).toLocaleDateString()}</td>\r\n                        <td className=\"Button\">\r\n                            <a onClick={() => handleFormulaireEdit(item._id)}>\r\n                                {isUserSocAdmin() ? 'Editer' : 'Voir'}\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            })\r\n\r\n            : null\r\n        );\r\n    }\r\n\r\n    const handleFormulaireEdit = (id) => {\r\n        //console.log(\"SHOULD EDIT FORMULAIRE: \"+id);\r\n        props.history.push(`/formulaire/${id}`)\r\n    }\r\n\r\n    const isUserSocAdmin = () => {\r\n        //console.log(this.props.user)\r\n        if(!props.societe){return false}\r\n        if(props.societe.admins.some(adm => {return adm === props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"FQV\">\r\n            <div className=\"Head\">\r\n                <div className=\"Info\">\r\n                    <div>Adresse: {(props.societe.adresse && props.societe.adresse !== '') ? props.societe.adresse : 'Non renseignée'}</div>\r\n                    <div>Personne de contact: {(props.societe.PDC && props.societe.PDC !== '') ? props.societe.PDC : 'Non renseignée'}</div>\r\n                </div>\r\n                <div className=\"Buttons\">\r\n                    <Link className=\"Btn\" to={`/societe/${props.societe._id}`}><FontAwesome name='edit'/></Link>\r\n                    <Link className=\"Btn\" to={`/societeGraph/${props.societe._id}`}><FontAwesome name='line-chart'/></Link>\r\n                </div>\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"Date\">Date</th>\r\n                        <th className=\"Button\">\r\n                            {isUserSocAdmin() ? \r\n                            <Link style={{display:'block'}} to={`/addFormulaires/${props.societe._id}`}>Nouveau formulaire</Link>\r\n                            : null}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderFormulaireQuick(props.formulaires)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getSocietes, getFormulairesBySociete } from '../actions';\r\n\r\nimport FormulairesQuickView from '../components/societeQuickView/formulairesQuickView.js';\r\n\r\n class HomeContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedSocieteId: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n    //componentWillReceiveProps(nextProps){\r\n        if(this.props.user){\r\n            this.props.dispatch(getSocietes());\r\n            //console.log(\"USERS ID: \"+this.props.user.login.id);\r\n        }\r\n        //this.props.dispatch(getSocietes(''));\r\n    }\r\n\r\n    handleSelectSociete = (event) => {\r\n        this.setState({selectedSocieteId: event.target.value});\r\n        //console.log(this.state.selectedSociete);\r\n        this.props.dispatch(getFormulairesBySociete(event.target.value, 'desc'));\r\n    }\r\n\r\n    renderSocietes = (societes) => {\r\n        return(\r\n        societes.list && societes.list.length ?\r\n\r\n        societes.list.map( (item) => {\r\n            //return(<p key={item._id}>{item.name}</p>);\r\n            return(\r\n                <option key={item._id} value={item._id}>\r\n                    {item.name}\r\n                </option>\r\n            );\r\n        })\r\n\r\n        : null\r\n        );\r\n    }\r\n\r\n    getSelectedSociete = () => {\r\n        return(\r\n            this.props.societes.list ?\r\n    \r\n            this.props.societes.list.filter( (item) => {\r\n                return item._id === this.state.selectedSocieteId;\r\n            })[0]\r\n    \r\n            : null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PageContent\">\r\n                <form>\r\n                    <div className=\"SS\">\r\n                    <label htmlFor=\"societeSelect\">Choisissez la société</label>\r\n                    <select id='societeSelect' value={this.state.selectedSocieteId} onChange={this.handleSelectSociete}>\r\n                        <option value='' />\r\n                        {this.renderSocietes(this.props.societes)}\r\n                    </select>\r\n                    </div>\r\n                </form>\r\n                { \r\n                    this.state.selectedSocieteId !== '' ?\r\n                        <FormulairesQuickView formulaires={this.props.formulaires} societe={this.getSelectedSociete()} {...this.props}/>\r\n                    :\r\n                        null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        societes: state.societes,\r\n        formulaires: state.formulaires\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomeContainer);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loginUser } from '../actions';\r\n\r\nclass LoginContainer extends Component {\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n            error:'',\r\n            success:false\r\n        }\r\n    }\r\n\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user.login.isAuth){\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n\r\n    submitForm = (e) =>{\r\n        e.preventDefault();\r\n        this.props.dispatch(loginUser(this.state))\r\n    }\r\n\r\n    render() {\r\n        let user = this.props.user;\r\n        return (\r\n            <div className=\"rl_container\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <h2>Log in here</h2>\r\n\r\n                    <div className=\"form_element\">\r\n                        <input \r\n                            type=\"email\"\r\n                            placeholder=\"Enter your mail\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputEmail}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_element\">\r\n                        <input \r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputPassword}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Log in</button>\r\n\r\n                    <div className=\"error\">\r\n                    {\r\n                        user.login ? \r\n                            <div>{user.login.message}</div>\r\n                        :null\r\n                    }\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        user:state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginContainer)","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Logout = (props) => {\r\n\r\n    let request = axios.get('/api/logout')\r\n    .then(request => {\r\n        setTimeout(()=>{\r\n            props.history.push('/');\r\n        }, 1000);\r\n    });\r\n\r\n    return (\r\n        <div className=\"logout_container\">\r\n            <h1>Déconnexion en cours</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addSociete } from '../actions';\r\n\r\n class AddSocieteContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n            formData:{\r\n                name:'',\r\n                adresse:'',\r\n                PDC:''\r\n                //ADMINS ET USERS\r\n            }\r\n        }\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(addSociete({\r\n            ...this.state.formData,\r\n            admins:[this.props.user.login.id]\r\n        }));\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = (event, name) => {\r\n        const newFormData = {\r\n            ...this.state.formData\r\n        }\r\n        newFormData[name] = event.target.value;\r\n\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rl_container article\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <h2>Nouvelle société</h2>\r\n\r\n                    <div className=\"form_element\">\r\n                        <input type=\"text\"\r\n                        placeholder=\"Nom\"\r\n                        value={this.state.formData.name}\r\n                        onChange={(event) => this.handleChange(event, 'name')}/>\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <input type=\"text\"\r\n                        placeholder=\"Adresse\"\r\n                        value={this.state.formData.adresse}\r\n                        onChange={(event) => this.handleChange(event, 'adresse')}/>\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <input type=\"text\"\r\n                        placeholder=\"Personne de contact\"\r\n                        value={this.state.formData.PDC}\r\n                        onChange={(event) => this.handleChange(event, 'PDC')}/>\r\n                    </div>\r\n                    <button type=\"submit\">Enregistrer</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        societe: state.societes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddSocieteContainer);","import React, { Component } from 'react'\r\n\r\nclass EditFormulaire extends Component {\r\n\r\n    convertDateToHtml = (inDate) => {\r\n        let date = new Date(inDate);\r\n        //(\"0\" + (this.getMonth() + 1)).slice(-2)\r\n        let tmpMonth = ('0' + (date.getMonth()+1)).slice(-2);\r\n        let tmpDay = ('0' + (date.getDate())).slice(-2);\r\n        let htmlDate = date.getFullYear()+'-'+tmpMonth+'-'+tmpDay;\r\n\r\n        //console.log('DATE IS: '+ htmlDate + \" FROM: \" + inDate)\r\n\r\n        return htmlDate;\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        props.formulaire ?\r\n            this.state = {\r\n                //formdata:{\r\n                    _id:props.formulaire._id,\r\n                    societeId:props.formulaire.societeId,\r\n                    date:this.convertDateToHtml(props.formulaire.date),\r\n                    CA:props.formulaire.CA,\r\n                    FA:props.formulaire.FA,\r\n                    CS:props.formulaire.CS,\r\n                    FG:props.formulaire.FG,\r\n                    AF:props.formulaire.AF,\r\n                    EBITDA:props.formulaire.EBITDA,\r\n                    CCT:props.formulaire.CCT,\r\n                    CLT:props.formulaire.CLT,\r\n                    CF:props.formulaire.CF,\r\n                    Inv:props.formulaire.Inv\r\n                //}\r\n            }\r\n            \r\n        :\r\n            this.state = {\r\n                //formdata:{\r\n                    _id:'',\r\n                    societeId:this.props.societeId,\r\n                    date:'',\r\n                    CA:'',\r\n                    FA:'',\r\n                    CS:'',\r\n                    FG:'',\r\n                    AF:'',\r\n                    EBITDA:'',\r\n                    CCT:'',\r\n                    CLT:'',\r\n                    CF:'',\r\n                    Inv:''\r\n                //}\r\n            }\r\n\r\n        //console.log(this.state.date)\r\n    }\r\n\r\n    //METTRE A JOUR LE STATE\r\n    handleNumInput = (event,name) => {\r\n        /*let numValue = event.target.value !== \"\" ? parseInt(event.target.value) : \"\"\r\n        this.setState({[name]:numValue});\r\n        let tmpEBITDA = (\r\n            this.state['CA'] - \r\n            this.state['FA'] - \r\n            this.state['CS'] - \r\n            this.state['FG'] - \r\n            this.state['AF']\r\n        );\r\n        this.setState({EBITDA: tmpEBITDA});*/\r\n        let numValue = event.target.value !== \"\" ? parseInt(event.target.value) : \"\"\r\n        let tmpState = this.state;\r\n        tmpState[name] = numValue;\r\n        tmpState['EBITDA'] = (\r\n            tmpState['CA'] - \r\n            tmpState['FA'] - \r\n            tmpState['CS'] - \r\n            tmpState['FG'] - \r\n            tmpState['AF']\r\n        );\r\n        this.setState(tmpState);\r\n    }\r\n    handleDateInput = (event,name) => {\r\n        this.setState({[name]:event.target.value});\r\n        console.log('NEW DATE IS: '+event.target.value)\r\n        //console.log(this.state.date)\r\n    }\r\n\r\n    //DEMANDER AU COMPONENT PARENT D'UPDATEFORMULAIRE\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        //this.props.dispatch(updateBook(this.state.formdata))\r\n\r\n        let reqFormulaire = {...this.state};\r\n        reqFormulaire.date = new Date(reqFormulaire.date).toJSON();\r\n\r\n        for(let elem in reqFormulaire)\r\n        {\r\n            if(reqFormulaire[elem] === \"\"){\r\n                delete reqFormulaire[elem];\r\n            } \r\n        }\r\n\r\n        this.props.saveFormulaire(reqFormulaire);\r\n        //console.log(this.state.formdata);\r\n    }\r\n\r\n    render() {\r\n        //console.log('STATE DATE: '+this.state.date);\r\n        //console.log(this.props)\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.submitForm}>\r\n                    <h2>Edition du formulaire</h2>\r\n                    \r\n                    <div className=\"form_element\">\r\n                        <label>Date : </label>\r\n                        <input\r\n                            id=\"dateIn\"\r\n                            type=\"date\"\r\n                            value={this.state.date}\r\n                            onChange={(event)=>this.handleDateInput(event,'date')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_element\">\r\n                        <label>Chiffre d'affaire : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Chiffre d'affaire\"\r\n                            value={this.state.CA}\r\n                            onChange={(event)=>this.handleNumInput(event,'CA')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Frais d'achats : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Frais d'achats\"\r\n                            value={this.state.FA}\r\n                            onChange={(event)=>this.handleNumInput(event,'FA')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Charges salariales : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Charges salariales\"\r\n                            value={this.state.CS}\r\n                            onChange={(event)=>this.handleNumInput(event,'CS')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Frais généraux : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Frais généraux\"\r\n                            value={this.state.FG}\r\n                            onChange={(event)=>this.handleNumInput(event,'FG')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Autres frais : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Autres frais\"\r\n                            value={this.state.AF}\r\n                            onChange={(event)=>this.handleNumInput(event,'AF')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>EBITDA : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"EBITDA\"\r\n                            value={this.state.EBITDA}\r\n                            onChange={(event)=>this.handleNumInput(event,'EBITDA')}\r\n                            disabled={this.props.disabled}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Crédits à court termes : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Crédits court termes\"\r\n                            value={this.state.CCT}\r\n                            onChange={(event)=>this.handleNumInput(event,'CCT')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Crédits à long termes : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Crédits long termes\"\r\n                            value={this.state.CLT}\r\n                            onChange={(event)=>this.handleNumInput(event,'CLT')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Cashflow : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Cashflow\"\r\n                            value={this.state.CF}\r\n                            onChange={(event)=>this.handleNumInput(event,'CF')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Investissements : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Investissements\"\r\n                            value={this.state.Inv}\r\n                            onChange={(event)=>this.handleNumInput(event,'Inv')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n\r\n                    {this.props.disabled !== 'disabled' ? \r\n                    <div className=\"Btn\">\r\n                        <a onClick={this.submitForm}>Enregistrer</a> \r\n                    </div>\r\n                    : null}\r\n                    {this.props.disabled !== 'disabled' ? \r\n                    <div className=\"Btn\">\r\n                            <a onClick={this.props.deleteFormulaire}>Supprimer le formulaire</a>\r\n                    </div>\r\n                    : null}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  EditFormulaire","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getFormulaire, getSociete, addFormulaire, updateFormulaire, deleteFormulaire } from '../actions';\r\n\r\nimport EditFormulaire from '../components/formulaires/editFormulaire.js';\r\n\r\n class EditFormulaireContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch(getFormulaire(this.props.match.params.id)).then((res) => {\r\n            //console.log(res);\r\n            this.props.dispatch(getSociete(res.payload.societeId))\r\n        });\r\n        \r\n    }\r\n\r\n    //FONCTION UPDATEFORMULAIRE(FORMULAIRE)\r\n    sendUpdateFormulaire = (formulaire) => {\r\n        formulaire._id ?\r\n            this.props.dispatch(updateFormulaire(formulaire))\r\n        :\r\n            this.props.dispatch(addFormulaire(formulaire));\r\n\r\n        //console.log(formulaire);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    deleteFormulaire = () => {\r\n        if(window.confirm(\"Le formulaire va être supprimé. \\nÊtes-vous sûr de votre choix? (ce changement est définitif)\")){\r\n            //console.log(this.props.formulaire)\r\n            /*\r\n            this.props.dispatch(deleteSociete(this.props.formulaire._id))\r\n            redirect\r\n            */\r\n           this.props.dispatch(deleteFormulaire(this.props.formulaire._id));\r\n           this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isUserSocAdmin = () => {\r\n        if(!this.props.societe){return false}\r\n        if(this.props.societe.admins.some(adm => {return adm === this.props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    renderFormulaire(){\r\n        return(\r\n            this.props.formulaire ?\r\n\r\n                <EditFormulaire key={this.props.formulaire._id}\r\n                societeId={this.props.formulaire.societeId} \r\n                saveFormulaire={this.sendUpdateFormulaire}\r\n                deleteFormulaire={this.deleteFormulaire}\r\n                formulaire={this.props.formulaire}\r\n                disabled={(this.isUserSocAdmin() ? '' : \"disabled\")}/>\r\n\r\n            : null\r\n        );\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props)\r\n        return (\r\n            <div className=\"PageContent\">\r\n                <div className=\"EditFormContainer\">\r\n                    {this.renderFormulaire()}\r\n                    {/*this.isUserSocAdmin() ? \r\n                    <div className=\"Btn\">\r\n                        <a onClick={this.sendUpdateFormulaire}>Enregistrer</a> \r\n                    </div>\r\n                    : null}\r\n                    {this.isUserSocAdmin() ? \r\n                    <div className=\"Btn\">\r\n                            <a onClick={this.deleteFormulaire}>Supprimer le formulaire</a>\r\n                    </div>\r\n                    : null*/}\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        formulaire: state.formulaires.formulaire,\r\n        societe: state.societes.societe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditFormulaireContainer);","import React, { Component } from 'react'\r\n\r\nconst AddFormulaire = (props) => {\r\n\r\n    const convertDateToHtml = (inDate) => {\r\n        let date = new Date(inDate);\r\n        let tmpMonth = ('0' + (date.getMonth()+1)).slice(-2);\r\n        let tmpDay = date.getDate();\r\n        let htmlDate = date.getFullYear()+'-'+tmpMonth+'-'+tmpDay;\r\n        return htmlDate;\r\n    }\r\n\r\n    //METTRE A JOUR LE STATE\r\n    const handleNumInput = (event,name) => {\r\n        props.handleNum(props.formId, event.target.value, name)\r\n    }\r\n    const handleDateInput = (event,name) => {\r\n        props.handleDate(props.formId, event.target.value, name)\r\n    }\r\n\r\n    //DEMANDER AU COMPONENT PARENT D'UPDATEFORMULAIRE\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddFormContainer\">\r\n        <form onSubmit={submitForm}>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        id=\"dateIn\"\r\n                        type=\"date\"\r\n                        value={props.date}\r\n                        onChange={(event)=>handleDateInput(event,'date')}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Chiffre d'affaire\"\r\n                        value={props.CA}\r\n                        onChange={(event)=>handleNumInput(event,'CA')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Frais d'achats\"\r\n                        value={props.FA}\r\n                        onChange={(event)=>handleNumInput(event,'FA')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Charges salariales\"\r\n                        value={props.CS}\r\n                        onChange={(event)=>handleNumInput(event,'CS')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Frais généraux\"\r\n                        value={props.FG}\r\n                        onChange={(event)=>handleNumInput(event,'FG')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Autres frais\"\r\n                        value={props.AF}\r\n                        onChange={(event)=>handleNumInput(event,'AF')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"EBITDA\"\r\n                        value={props.EBITDA}\r\n                        onChange={(event)=>handleNumInput(event,'EBITDA')}\r\n                        disabled\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Crédits court termes\"\r\n                        value={props.CCT}\r\n                        onChange={(event)=>handleNumInput(event,'CCT')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Crédits long termes\"\r\n                        value={props.CLT}\r\n                        onChange={(event)=>handleNumInput(event,'CLT')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Cashflow\"\r\n                        value={props.CF}\r\n                        onChange={(event)=>handleNumInput(event,'CF')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Investissements\"\r\n                        value={props.Inv}\r\n                        onChange={(event)=>handleNumInput(event,'Inv')}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  AddFormulaire","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addFormulaire, getSociete } from '../actions';\r\n\r\nimport AddFormulaire from '../components/formulaires/addFormulaire.js';\r\n\r\n class AddFormulaireContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            formulaires: [\r\n                {\r\n                    societeId:this.props.match.params.id,\r\n                    date:'',\r\n                    CA:'',\r\n                    FA:'',\r\n                    CS:'',\r\n                    FG:'',\r\n                    AF:'',\r\n                    EBITDA:'',\r\n                    CCT:'',\r\n                    CLT:'',\r\n                    CF:'',\r\n                    Inv:''\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleNumInput = (form,value,name) => {\r\n        let numValue = value !== \"\" ? parseInt(value) : \"\";\r\n        let tmpState = this.state;\r\n        tmpState.formulaires[form][name] = numValue;\r\n        tmpState.formulaires[form]['EBITDA'] = (\r\n            tmpState.formulaires[form]['CA'] - \r\n            tmpState.formulaires[form]['FA'] - \r\n            tmpState.formulaires[form]['CS'] - \r\n            tmpState.formulaires[form]['FG'] - \r\n            tmpState.formulaires[form]['AF']\r\n        );\r\n        this.setState(tmpState);\r\n        \r\n    }\r\n    handleDateInput = (form,value,name) => {\r\n\r\n        //console.log('NEW DATE IS: '+value)\r\n        //this.setState({[name]:value});\r\n        let tmpState = this.state;\r\n        tmpState.formulaires[form][name] = value;\r\n        this.setState(tmpState);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch(getSociete(this.props.match.params.id));\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        //console.log(nextProps);\r\n    }\r\n    componentDidUpdate(){\r\n        //console.log(this.props);\r\n        if(this.props.societe && !this.isUserSocAdmin()){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    convertDateToHtml = (inDate) => {\r\n        let date = new Date(inDate);\r\n        let tmpMonth = ('0' + (date.getMonth()+1)).slice(-2);\r\n        let tmpDay = date.getDate();\r\n        let htmlDate = date.getFullYear()+'-'+tmpMonth+'-'+tmpDay;\r\n        return htmlDate;\r\n    }\r\n\r\n    sendUpdateFormulaire = (formulaire) => {\r\n        let reqFormulaire = formulaire;\r\n        reqFormulaire.date = new Date(reqFormulaire.date).toJSON();\r\n\r\n        for(let elem in reqFormulaire)\r\n        {\r\n            if(reqFormulaire[elem] === \"\"){\r\n                delete reqFormulaire[elem];\r\n            } \r\n        }\r\n\r\n        this.props.dispatch(addFormulaire(reqFormulaire));\r\n        //Indiquer si il y a une erreur ou non, enlever les formulaires correctement ajoutés\r\n    }\r\n\r\n    SaveAllChanges = () => {\r\n        //console.log(this.state);\r\n\r\n        for(let i in this.state.formulaires)\r\n        {\r\n            //console.log('FORMULAIRE DATA TO ADD: '+ this.state.formulaires[i]);\r\n            this.sendUpdateFormulaire(this.state.formulaires[i]);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    AddFormulaire = () => {\r\n        const defaultFormulaire = {\r\n            societeId:this.props.match.params.id,\r\n            date:'',\r\n            CA:'',\r\n            FA:'',\r\n            CS:'',\r\n            FG:'',\r\n            AF:'',\r\n            EBITDA:'',\r\n            CCT:'',\r\n            CLT:'',\r\n            CF:'',\r\n            Inv:''\r\n        }\r\n\r\n        //this.setState({...this.state, defaultFormulaire})\r\n        let tmpState = this.state;\r\n        tmpState.formulaires.push(defaultFormulaire);// = {...tmpState.formulaires, defaultFormulaire};\r\n\r\n        this.setState(tmpState);\r\n\r\n        //console.log(this.state);\r\n    }\r\n\r\n    isUserSocAdmin = () => {\r\n        if(!this.props.societe){return false}\r\n        if(this.props.societe.admins.some(adm => {return adm === this.props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    renderFormulaires(){\r\n        return(\r\n            this.state.formulaires.map((item, i) => {\r\n                return(\r\n                    <AddFormulaire key={i} formId={i} {...item} handleNum={this.handleNumInput} handleDate={this.handleDateInput}/>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(this.isUserSocAdmin()){\r\n        return (\r\n            <div className=\"AddFormPageContent\">\r\n                <h2>Ajout de formulaires</h2>\r\n                {this.renderFormulaires()}\r\n                <div className=\"Btn\">\r\n                    <a onClick={this.SaveAllChanges}>Enregistrer</a>\r\n                    <a onClick={this.AddFormulaire}>Ajouter un formulaire</a>    \r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n        else{return null}\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        societe: state.societes.societe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddFormulaireContainer);","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, userRegister } from '../actions';\r\n\r\nclass Register extends PureComponent {\r\n\r\n    state ={\r\n        email:'',\r\n        password:'',\r\n        privileges:0,\r\n        error:''\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch(getUsers())\r\n    }\r\n\r\n\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    } \r\n    handleInputPassword= (event) => {\r\n        this.setState({password:event.target.value})\r\n    } \r\n    handleInputPrivileges = (event) => {\r\n        let numValue = event.target.value === \"1\" ? 1 : 0;\r\n        this.setState({privileges:numValue})\r\n    } \r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user.register === false){\r\n            this.setState({error:'Error,try again'})\r\n        } else{\r\n            this.setState({\r\n                email:'',\r\n                password:'',\r\n                privileges:0\r\n            })\r\n        }\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({error:''});\r\n\r\n        this.props.dispatch(userRegister({\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            privileges:this.state.privileges\r\n        },this.props.user.users))\r\n        \r\n    }\r\n\r\n    showUsers = (user) =>(\r\n        user.users ? \r\n            user.users.map(item => (\r\n                <tr key={item._id}>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.privileges ? 'administrateur' : 'utilisateur'}</td>\r\n                </tr>\r\n            ))\r\n        :null\r\n    )\r\n\r\n\r\n    render() {\r\n        let user = this.props.user;\r\n        return (\r\n            <div className=\"rl_container\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <h2>Ajouter un utilisateur</h2>\r\n                    \r\n                    <div className=\"form_element\">\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputEmail}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form_element\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Mot de passe\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputPassword}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form_element\">\r\n                        <select\r\n                            value={this.state.privileges}\r\n                            onChange={this.handleInputPrivileges}\r\n                        >\r\n                            <option value=\"0\">utilisateur</option>\r\n                            <option value=\"1\">administrateur</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Enregistrer</button>\r\n                    <div className=\"error\">\r\n                        {this.state.error}\r\n                    </div>\r\n\r\n                </form>\r\n                <div className=\"current_users\">\r\n                    <h4>Utilisateurs existants:</h4>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <th>Privileges</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.showUsers(user)}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user:state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\r\n\r\nimport { getFormulairesBySociete } from '../actions';\r\n\r\n//import CustomDateTick from '../components/customDateTick.js';\r\n\r\n class SocieteGraphContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            toShow: {\r\n                CA: true,\r\n                FA: true,\r\n                CS: true,\r\n                FG: true,\r\n                AF: true,\r\n                EBITDA: true,\r\n                CCT: true,\r\n                CLT: true,\r\n                CF: true,\r\n                Inv: true\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        //this.props.dispatch(getFormulairesBySociete(this.props.match.params.societeId));\r\n        //console.log(\"Searching for formulaire: \"+this.props.match.params.id);\r\n        this.props.dispatch(getFormulairesBySociete(this.props.match.params.id)).then(() => {\r\n            //console.log(\"Formulaires obtenus pour la société: \"+ this.props.match.params.id);\r\n        });\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        //console.log('next props: ' + JSON.stringify(nextProps));\r\n\r\n        let tmpData = nextProps.formulaires;\r\n        //console.log('new data: ' + JSON.stringify(tmpData));\r\n\r\n        for(let elem in tmpData)\r\n        {\r\n            tmpData[elem].date = new Date(tmpData[elem].date).toLocaleDateString();\r\n        }\r\n\r\n        this.setState({...this.state, data:tmpData});\r\n    }\r\n\r\n    handleFieldSelect(e){\r\n        /*this.setState({\r\n            toShow: {\r\n                CA: true,\r\n                FA: true,\r\n                CS: true,\r\n                FG: true,\r\n                AF: true,\r\n                EBITDA: false,\r\n                CCT: false,\r\n                CLT: false,\r\n                CF: false,\r\n                Inv: false\r\n            }\r\n        })*/\r\n\r\n        /*for(elem in this.state.toShow){\r\n\r\n        }*/\r\n\r\n        let tmpState = this.state;\r\n\r\n        tmpState.toShow[e.target.name] = e.target.checked;\r\n\r\n        //console.log(tmpState);\r\n\r\n        this.setState(tmpState);\r\n    }\r\n\r\n    renderFieldSelect(){\r\n\r\n        let formFields = Object.keys(this.state.toShow).map(elem => {\r\n            return(\r\n                <div className=\"CheckboxesGraphElem\" key={elem}>\r\n                    <label>{elem} : </label>\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    name={elem}\r\n                    checked={this.state.toShow[elem]}\r\n                    onChange={(e) => this.handleFieldSelect(e)}\r\n                    />\r\n                </div>\r\n            );\r\n        })\r\n\r\n        return(\r\n            <div className=\"CheckboxesGraph\">\r\n                {formFields}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderGraph(){\r\n\r\n        const linesColor = {\r\n            CA: '#800000',\r\n            FA: '#000075',\r\n            CS: '#f032e6',\r\n            FG: '#3cb44b',\r\n            AF: '#ffe119',\r\n            EBITDA: '#42d4f4',\r\n            CCT: '#f58231',\r\n            CLT: '#0000ff',\r\n            CF: '#000000',\r\n            Inv: '#ff0000'\r\n        }\r\n\r\n        const renderLines = Object.keys(this.state.toShow).map((elem, i) => {\r\n            return(\r\n                this.state.toShow[elem] ? \r\n                    <Line key={i} type=\"monotone\" dataKey={elem} stroke={linesColor[elem]} />\r\n                :\r\n                    null\r\n            );\r\n        })\r\n\r\n        return(\r\n            this.props.formulaires ?\r\n                <div className=\"FormGraph\">\r\n                    <ResponsiveContainer width=\"100%\" aspect={2.2}>\r\n                        <LineChart width={600} height={300} data={this.state.data}\r\n                        margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                            <XAxis dataKey=\"date\" />\r\n                            <YAxis/>\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Tooltip/>\r\n                            <Legend />\r\n                            {renderLines}\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            : null\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"GraphContainer\">\r\n                {this.renderFieldSelect()}\r\n                {this.renderGraph()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        formulaires: state.formulaires.list\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SocieteGraphContainer);","import React, { Component } from 'react'\r\n\r\nclass UserSelector extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n    \r\n        //console.log(\"SHOULD RETURN A VALID USER ID\");\r\n        //props.dispatch(getUsers())\r\n\r\n        //CHECK SI L'UTILISATEUR EXISTE, SI OUI, L'AJOUTER A LA LISTE (ID)\r\n\r\n        //AJOUTER CHECK SI L'UTILISATEUR EST DEJA DANS LA LISTE\r\n        /*if(this.props.user.users.some(usr => {\r\n            return usr.email === this.state.formCurAdmin;\r\n        })){\r\n            let tmpState = this.state;\r\n\r\n            tmpState.societe.users.concat(this.props.user.users.filter(usr => {\r\n                return usr.email === this.state.formCurAdmin\r\n            }));\r\n            this.setState(tmpState);\r\n            console.log(\"TMPSTATE: \");\r\n            console.log(tmpState);\r\n        }*/\r\n\r\n        let tmpUsers = this.props.users.filter(usr => {\r\n            return usr.email === this.state.email\r\n        })\r\n\r\n        //console.log(tmpUsers);\r\n\r\n        this.props.returnUser(tmpUsers[0]);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"form_element\">\r\n                    <label>{this.props.children}</label>\r\n                    <input\r\n                        id=\"AddUser\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <div className=\"Btn\">\r\n                            <a onClick={this.submitForm}>+</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserSelector;","import React from 'react'\r\n\r\nconst UserList = (props) => {\r\n\r\n    const showUsers = (users) =>{\r\n        //console.log(users[0]);\r\n        return(\r\n        users.length > 0 ? \r\n            users.map(item => (\r\n                <tr key={item._id}>\r\n                    <td>{item.email}</td>\r\n                </tr>\r\n            ))\r\n        :null\r\n        );\r\n    }\r\n\r\n    return (\r\n    <div className=\"current_users\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>{props.header}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.users ? showUsers(props.users) : null}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default UserList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getSociete, updateSociete, deleteSociete, getUsers } from '../actions';\r\n\r\nimport UserSelector from '../components/userSelector/userSelector.js';\r\nimport UserList from '../components/userSelector/userList.js';\r\n\r\n class SocieteContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            societe: {\r\n                id: '',\r\n                name: '',\r\n                adresse: '',\r\n                PDC: '',\r\n                admins:[],\r\n                users:[]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch(getSociete(this.props.match.params.id)).then(() => {\r\n            //console.log(\"DISPATCH ENDED SOCIETE: \");\r\n            //console.log(this.props.societe);\r\n        })\r\n\r\n        this.props.dispatch(getUsers());\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        //console.log(nextProps);\r\n        this.setState({societe:nextProps.societe});\r\n    }\r\n\r\n    handleInput = (event,name) => {\r\n        /*let value = event.target.value;\r\n        this.setState({[name]:value});*/\r\n\r\n        let tmpState = this.state;\r\n        tmpState.societe[name] = event.target.value;\r\n        this.setState(tmpState);\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(updateSociete(this.state.societe))\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    addSocAdmin = (user) => {\r\n        //console.log(\"Try to add admin : \" + JSON.stringify(user));\r\n        if(!user || !this.state.societe){return null}\r\n\r\n        //SI L'UTILISATEUR EST PAS ADMIN\r\n        if(!this.state.societe.admins.some(adm => {return adm === user._id})){\r\n            let tmpState = this.state;\r\n            tmpState.societe.admins = tmpState.societe.admins.concat(user._id);\r\n\r\n            //SI L'UTILISATEUR EST USER, LE RETIRER\r\n            //if(this.state.societe.admins.some(usr => {return usr === user._id})){\r\n                tmpState.societe.users = tmpState.societe.users.filter(u => {return u !== user._id});\r\n            //}\r\n            //console.log(tmpState);\r\n            this.setState(tmpState);\r\n        }\r\n    }\r\n\r\n    addSocUser = (user) => {\r\n        //console.log(\"Try to add user : \" + JSON.stringify(user));\r\n        if(!user || !this.state.societe){return null}\r\n        \r\n        //SI L'UTILISATEUR EST NI ADMIN NI USER\r\n        if(\r\n            !(this.state.societe.users.some(usr => {return usr === user._id}))\r\n            && !(this.state.societe.admins.some(adm => {return adm === user._id}))\r\n            ){\r\n            let tmpState = this.state;\r\n            tmpState.societe.users = tmpState.societe.users.concat(user._id);\r\n            //console.log(tmpState);\r\n            this.setState(tmpState);\r\n        }\r\n    }\r\n\r\n    getUsersById = (usersId) => {\r\n        if(!this.props.user.users){return null}\r\n        if(this.props.user.users.length){\r\n            return(this.props.user.users.filter(usr => {\r\n                return(\r\n                    usersId.some(uid => uid === usr._id)\r\n                );\r\n            })\r\n            );\r\n        }\r\n        else{\r\n            return(usersId.some(uid => uid === this.props.user.users._id));\r\n        }\r\n    }\r\n\r\n    deleteSociete = () => {\r\n        if(window.confirm(\"La société et ses formulaires vont être supprimés. \\nÊtes-vous sûr de votre choix? (ce changement est définitif)\")){\r\n            //console.log(this.props.societe)\r\n            /*\r\n            this.props.dispatch(deleteSociete(this.props.societe._id))\r\n            redirect\r\n            */\r\n            this.props.dispatch(deleteSociete(this.props.societe._id));\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isUserSocAdmin = () => {\r\n        //console.log(this.props.user)\r\n        if(this.state.societe.admins.some(adm => {return adm === this.props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(...(!this.isUserSocAdmin() ? 'admin' : 'disabled'))\r\n        //console.log(this.state)\r\n        if(this.state.societe.name !== ''){\r\n            return (\r\n                <div className=\"PageContent\">\r\n                    <div className=\"EditSocietePageContent\">\r\n                    <form onSubmit={this.submitForm}>\r\n                        <div className=\"form_element\">\r\n                            <label>Nom : </label>\r\n                            <input\r\n                                id=\"name\"\r\n                                value={this.state.societe.name}\r\n                                onChange={(event)=>this.handleInput(event,'name')}\r\n                                disabled={(this.isUserSocAdmin() ? '' : \"disabled\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <label>Adresse : </label>\r\n                            <input\r\n                                id=\"adresse\"\r\n                                value={this.state.societe.adresse}\r\n                                onChange={(event)=>this.handleInput(event,'adresse')}\r\n                                disabled={(this.isUserSocAdmin() ? '' : \"disabled\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <label>Personne de contact : </label>\r\n                            <input\r\n                                id=\"PDC\"\r\n                                value={this.state.societe.PDC}\r\n                                onChange={(event)=>this.handleInput(event,'PDC')}\r\n                                disabled={(this.isUserSocAdmin() ? '' : \"disabled\")}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* AJOUT D'ADMINS, AJOUT D'UTILISATEURS */}\r\n                        {this.isUserSocAdmin() ? \r\n                        <UserSelector \r\n                            users={this.props.user.users} \r\n                            returnUser={this.addSocAdmin}>Ajouter un administrateur : </UserSelector>\r\n                        : null}\r\n                        <UserList \r\n                            users={this.getUsersById(this.state.societe.admins)} \r\n                            header=\"Administrateurs\"\r\n                            disabled={(this.isUserSocAdmin() ? 'enabled' : \"disabled\")}/>\r\n                        {this.isUserSocAdmin() ? \r\n                        <UserSelector \r\n                            users={this.props.user.users} \r\n                            returnUser={this.addSocUser}>Ajouter un utilisateur : </UserSelector>\r\n                        : null}\r\n                        <UserList \r\n                            users={this.getUsersById(this.state.societe.users)} \r\n                            header=\"Utilisateurs\"\r\n                            disabled={(this.isUserSocAdmin() ? 'enabled' : \"disabled\")}/>\r\n\r\n                        {this.isUserSocAdmin() ? \r\n                        <div className=\"Btn\">\r\n                            <a onClick={this.submitForm}>Enregistrer</a>\r\n                        </div>\r\n                        : null}\r\n                        {this.isUserSocAdmin() ? \r\n                        <div className=\"Btn\">\r\n                            <a onClick={this.deleteSociete}>Supprimer la société</a>\r\n                        </div> \r\n                        : null}\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{return null}\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        //formulaires: state.formulaires\r\n        societe: state.societes.societe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SocieteContainer);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n class CsvTestContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedFile: null,\r\n            loaded: 0,\r\n            societeId: '5c4f28897e19e41c4c4fc80d'\r\n        }\r\n    }\r\n\r\n    handleselectedFile = (event) => {\r\n        this.setState({\r\n            selectedFile: event.target.files[0],\r\n            loaded: 0,\r\n            societeId: '5c4f28897e19e41c4c4fc80d'\r\n        })\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        //console.log(\"SHOULD UPLOAD CSV\");\r\n\r\n        const data = new FormData();\r\n        data.append('file', this.state.selectedFile, this.state.selectedFile.name)\r\n        data.append('societeId', this.state.societeId)\r\n\r\n        axios\r\n        .post('/api/CSVFormulaires', data, {\r\n            onUploadProgress: ProgressEvent => {\r\n            this.setState({\r\n                loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\r\n            })\r\n            },\r\n        })\r\n        .then(res => {\r\n            //console.log(res)\r\n        })\r\n    }\r\n\r\n    getFormulairesCsv = () => {\r\n        axios.get('/api/CSVformulairesBySociete', {\r\n            params: {\r\n                id: this.state.societeId,\r\n                order: 'asc'\r\n            }\r\n        }).then(response => {\r\n            //this.props.history.push()\r\n            //console.log(response);\r\n        });\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rl_container article\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <h2>Uploader des sociétés par CSV</h2>\r\n                    <input type=\"file\" name=\"file\" onChange={this.handleselectedFile}/>\r\n                    <button type=\"submit\">Upload</button>\r\n                </form>\r\n                <p>{Math.round(this.state.loaded, 2)} % uploadé</p>\r\n                <p><button onClick={this.getFormulairesCsv}>Get formulaires CSV</button></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CsvTestContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport { connect } from 'react-redux';\n\nconst SidenavItems = (props, {user}) => {\n\n    const items = [\n        {\n            type:'navItem',\n            icon:'home',\n            text:'Accueil',\n            link:'/',\n            restricted:true\n        },\n        {\n            type:'navItem',\n            icon:'user-plus',\n            text:'Nouvel utilisateur (admin)',\n            link:'/user/register',\n            restricted:true,\n            admin:true\n        },\n        {\n            type:'navItem',\n            icon:'sign-in',\n            text:'Connexion',\n            link:'/login',\n            restricted:false,\n            exclude:true\n        },\n        {\n            type:'navItem',\n            icon:'sign-out',\n            text:'Déconnexion',\n            link:'/logout',\n            restricted:true\n        },\n        {\n            type:'navItem',\n            icon:'file-text-o',\n            text:'Nouvelle société',\n            link:'/societe/add',\n            restricted:true\n        }\n    ]\n\n    const element = (item,i) => (\n        <div key={i} className={item.type}>\n            <Link to={item.link}\n            onClick={props.onHideNav}>\n                <FontAwesome name={item.icon}/>\n                {item.text}\n            </Link>\n        </div>\n    )\n\n    const showItems = () => (\n        props.user.login ?\n            items.map((item,i)=>{\n                if(props.user.login.isAuth) {\n                    //console.log(props.user)\n                    if(!item.exclude){\n                        if(props.user.login.privileges || !item.admin)\n                        {\n                            return element(item,i);\n                        }\n                        else{\n                            //return element(item,i);\n                            return null;\n                        }\n                        \n                    }\n                    else{\n                        return null;\n                    }\n                    /*return !item.exclude ?\n                        element(item,i)\n                    :null*/\n                } else {\n                    return !item.restricted ?\n                        element(item,i)\n                    :null\n                }\n            })\n        :null\n        /*items.map((item,i)=>{\n            return element(item,i);\n        })*/\n    )\n\n    return (\n        <div>\n            {showItems()}\n        </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return{\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(SidenavItems)","import React from 'react';\r\nimport SideNav from 'react-simple-sidenav';\r\nimport SidenavItems from './sidenav_items'\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n       <SideNav\r\n            showNav={props.showNav}\r\n            onHideNav={props.onHideNav}\r\n            navStyle={{\r\n                background:'#222',\r\n                width:'50%',\r\n                maxWidth:'15em'\r\n            }}\r\n       >\r\n           <SidenavItems onHideNav={props.onHideNav}/>\r\n        </SideNav>\r\n    );\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ConnectedUser = (props, {user}) => {\r\n    return (\r\n        <div className=\"ConnectedUser\">\r\n            {props.user.login ? props.user.login.email : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ConnectedUser)","import React, { Component } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Nav from './sidenav/sidenav.js';\r\nimport ConnectedUser from './connectedUser.js';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            showNav:false\r\n        }\r\n    }\r\n\r\n    onHideNav = () => {\r\n        this.setState({showNav:false});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header>\r\n                <Nav \r\n                showNav={this.state.showNav}\r\n                onHideNav={() => this.onHideNav()} />\r\n                <div className=\"open_nav\">\r\n                    <FontAwesome \r\n                    name=\"bars\"\r\n                    onClick={() => this.setState({showNav:true})}\r\n                    style={{\r\n                        color:'lightGray',\r\n                        padding:'8pt',\r\n                        cursor:'pointer'\r\n                    }} />\r\n                </div>\r\n                    <ConnectedUser />\r\n                    <Link to=\"/\" className=\"logo\">\r\n                        Digitech TP\r\n                    </Link>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nimport Header from '../components/header/header.js';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div>\r\n        <Header />\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { auth } from '../actions';\r\n\r\nexport default function(ComposedClass, reload){\r\n    class AuthenticationCheck extends Component {\r\n\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state = {\r\n                loading: true\r\n            }\r\n        }\r\n\r\n        componentWillMount(){\r\n            this.props.dispatch(auth());\r\n        }\r\n\r\n        componentWillReceiveProps(nextProps){\r\n            this.setState({loading:false})\r\n\r\n            if(!nextProps.user.login.isAuth){\r\n                if(reload){\r\n                    this.props.history.push('/login');\r\n                }\r\n            } \r\n            else {\r\n                if(reload === false){\r\n                    this.props.history.push('/');\r\n                }\r\n            }\r\n        }\r\n\r\n        render(){\r\n            if(this.state.loading){\r\n                return(\r\n                    <div className=\"loader\">Chargement</div>\r\n                );\r\n            }\r\n            return(\r\n                <ComposedClass {...this.props} user={this.props.user}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    function  mapStateToProps(state) {\r\n        return {\r\n            user: state.user\r\n        };\r\n    }\r\n    return connect(mapStateToProps)(AuthenticationCheck);\r\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport HomeContainer from './containers/homeContainer.js';\nimport LoginContainer from './containers/loginContainer.js';\nimport Logout from './components/logout.js';\nimport AddSocieteContainer from './containers/addSociete.js';\nimport EditFormulaireContainer from './containers/editFormulaireContainer.js';\nimport AddFormulaireContainer from './containers/addFormulaireContainer.js';\nimport Register from './containers/register.js';\nimport SocieteGraphContainer from './containers/societeGraphContainer.js';\nimport SocieteContainer from './containers/societeContainer.js';\nimport CsvTestContainer from './containers/csvTestContainer.js';\n/*import BookView from './components/Books'\nimport Login from './containers/Admin/login'\nimport User from './components/Admin'\nimport AddReview from './containers/Admin/add'\nimport UserPosts from './components/Admin/userPosts'\nimport EditReview from './containers/Admin/edit';\nimport Register from './containers/Admin/register';\nimport Logout from './components/Admin/logout';*/\n\nimport Layout from './hoc/layout.js';\nimport Auth from './hoc/auth.js';\n\nconst Routes = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/\" exact component={Auth(HomeContainer, true)} />\n                <Route path=\"/login\" exact component={Auth(LoginContainer, false)} />\n                <Route path=\"/logout\" exact component={Auth(Logout, true)} />\n                <Route path=\"/user/register\" exact component={Auth(Register, true)} />\n                <Route path=\"/societe/add\" exact component={Auth(AddSocieteContainer, true)} />\n                <Route path=\"/societe/:id\" exact component={Auth(SocieteContainer, true)} />\n                <Route path=\"/formulaire/:id\" exact component={Auth(EditFormulaireContainer, true)} />\n                <Route path=\"/addFormulaires/:id\" exact component={Auth(AddFormulaireContainer, true)} />\n                <Route path=\"/societeGraph/:id\" exact component={Auth(SocieteGraphContainer, true)} />\n                <Route path=\"/uploadCsvSociete\" exact component={Auth(CsvTestContainer, true)} />\n            </Switch>\n        </Layout>\n        /*<Layout>\n            <Switch>\n                <Route path=\"/\" exact component={Auth(Home,null)}/>\n                <Route path=\"/login\" exact component={Auth(Login,false)}/>\n                <Route path=\"/user/logout\" exact component={Auth(Logout,true)}/>\n                <Route path=\"/user\" exact component={Auth(User,true)}/>\n                <Route path=\"/user/add\" exact component={Auth(AddReview,true)}/>\n                <Route path=\"/user/register\" exact component={Auth(Register,true)}/>\n                <Route path=\"/user/edit-post/:id\" exact component={Auth(EditReview,true)}/>\n                <Route path=\"/books/:id\" exact component={Auth(BookView,null)}/>\n                <Route path=\"/user/user-reviews\" exact component={Auth(UserPosts,true)}/>\n            </Switch>\n        </Layout>*/\n    );\n};\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nimport reducers from './reducers'; \nimport Routes from './routes';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware,ReduxThunk)(createStore)\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(reducers)}>\n        <BrowserRouter>\n            <Routes/>\n        </BrowserRouter>\n    </Provider>\n    ,document.getElementById('root'));"],"sourceRoot":""}