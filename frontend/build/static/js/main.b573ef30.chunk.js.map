{"version":3,"sources":["reducers/index.js","reducers/user_reducer.js","reducers/societes_reducer.js","reducers/formulaires_reducer.js","actions/index.js","components/societeQuickView/formulairesQuickView.js","components/csvupdown/csvupdown.js","containers/homeContainer.js","containers/loginContainer.js","components/logout.js","containers/addSociete.js","components/formulaires/editFormulaire.js","containers/editFormulaireContainer.js","components/formulaires/addFormulaire.js","containers/addFormulaireContainer.js","containers/register.js","containers/societeGraphContainer.js","components/userSelector/userSelector.js","components/userSelector/userList.js","containers/societeContainer.js","containers/csvTestContainer.js","components/header/sidenav/sidenav_items.js","components/header/sidenav/sidenav.js","components/header/connectedUser.js","components/header/header.js","hoc/layout.js","hoc/auth.js","routes.js","index.js"],"names":["rootReducers","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","login","payload","users","register","success","societes","list","societe","newSociete","updateSociete","doc","deleted","formulaires","formulaire","newFormulaire","updateFormulaire","getUsers","axios","get","then","response","data","getSociete","Id","params","id","getFormulairesBySociete","societeId","order","map","fData","EBITDA","CA","FA","CS","FG","AF","addFormulaire","post","FormulairesQuickView","props","handleFormulaireEdit","history","push","concat","isUserSocAdmin","admins","some","adm","react_default","a","createElement","className","adresse","PDC","es","to","_id","react_fontawesome_lib_default","name","style","display","item","key","Date","date","toLocaleDateString","onClick","CsvUpDown","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleselectedFile","event","setState","selectedFile","target","files","loaded","submitForm","e","preventDefault","FormData","append","onUploadProgress","ProgressEvent","total","res","refreshFormulaires","getFormulairesCsv","console","log","hostURI","window","location","hostname","open","Fragment","onSubmit","onChange","Math","round","Component","HomeContainer","handleSelectSociete","selectedSocieteId","value","dispatch","renderSocietes","getSelectedSociete","filter","htmlFor","assign","csvupdown","connect","LoginContainer","handleInputEmail","email","handleInputPassword","password","_ref","loginUser","error","nextProps","isAuth","placeholder","message","Logout","request","setTimeout","AddSocieteContainer","formData","handleChange","newFormData","_this2","EditFormulaire","convertDateToHtml","inDate","tmpMonth","getMonth","slice","tmpDay","getDate","getFullYear","handleNumInput","numValue","parseInt","tmpState","handleDateInput","defineProperty","reqFormulaire","elem","toJSON","saveFormulaire","CCT","CLT","CF","Inv","disabled","deleteFormulaire","EditFormulaireContainer","sendUpdateFormulaire","confirm","delete","match","editFormulaire","renderFormulaire","AddFormulaire","handleNum","formId","handleDate","AddFormulaireContainer","form","SaveAllChanges","i","defaultFormulaire","formulaires_addFormulaire","renderFormulaires","Register","privileges","handleInputPrivileges","userList","_ref2","toConsumableArray","userRegister","showUsers","PureComponent","SocieteGraphContainer","toShow","tmpData","checked","formFields","keys","handleFieldSelect","_this3","linesColor","renderLines","Line","dataKey","stroke","ResponsiveContainer","width","aspect","LineChart","height","margin","top","right","left","bottom","XAxis","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","renderFieldSelect","renderGraph","UserSelector","handleInput","tmpUsers","usr","returnUser","children","UserList","header","SocieteContainer","addSocAdmin","u","addSocUser","getUsersById","usersId","uid","deleteSociete","userSelector","userSelector_userList","CsvTestContainer","items","icon","text","link","restricted","admin","exclude","element","onHideNav","Nav","simple_sidenav_default","showNav","navStyle","background","maxWidth","sidenav_items","Header","sidenav","color","padding","cursor","connectedUser","Layout","hoc_auth","ComposedClass","reload","AuthenticationCheck","_Component","loading","inherits","createClass","Routes","layout","path","exact","component","Auth","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","react_redux_es","store","reducers","routes","document","getElementById"],"mappings":"gPAYeA,EANMC,YAAgB,CACjCC,KCPW,WAAyB,IAAhBC,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,GAAGG,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAOC,EAAOC,MACV,IAAK,aAEL,IAAK,YACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAiBQ,MAAMJ,EAAOK,UAClC,IAAK,WACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAiBU,MAAMN,EAAOK,UAClC,IAAK,gBACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIW,SAASP,EAAOK,QAAQG,QACxBF,MAAMN,EAAOK,QAAQC,QAE7B,QACI,OAAOV,IDPfa,SERW,WAAyB,IAAhBb,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,GAAGG,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAOC,EAAOC,MACV,IAAK,eAEL,IAAK,iBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBc,KAAKV,EAAOK,UAClC,IAAK,cACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBe,QAAQX,EAAOK,UACrC,IAAK,cAEL,IAAK,mBACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBgB,WAAWZ,EAAOK,UACxC,IAAK,iBACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACIN,EADX,CAEQiB,cAAcb,EAAOK,QAAQG,QAC7BG,QAAQX,EAAOK,QAAQS,MAEnC,IAAK,iBACD,OAAOZ,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBmB,QAAQf,EAAOK,UACrC,QACI,OAAOT,IFZfoB,YGTW,WAAyB,IAAhBpB,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,GAAGG,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAOC,EAAOC,MACV,IAAK,2BACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBc,KAAKV,EAAOK,UAClC,IAAK,iBACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBqB,WAAWjB,EAAOK,UACxC,IAAK,mBACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBc,KAAKV,EAAOK,UAClC,IAAK,iBAEL,IAAK,sBACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBsB,cAAclB,EAAOK,UAC3C,IAAK,oBACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACIN,EADX,CAEQuB,iBAAiBnB,EAAOK,QAAQG,QAChCS,WAAWjB,EAAOK,QAAQS,MAEtC,IAAK,oBACD,OAAOZ,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBmB,QAAQf,EAAOK,UACrC,QACI,OAAOT,wECGZ,SAASwB,IAIZ,MAAO,CACHnB,KAAK,WACLI,QALYgB,IAAMC,IAAN,cACCC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QA6CxC,SAASC,EAAWC,GAOvB,MAAO,CACH1B,KAAM,cACNI,QARYgB,IAAMC,IAAI,kBAAmB,CACzCM,OAAQ,CACJC,GAAIF,KAETJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAgD1B,SAASK,EAAwBC,EAAWC,GAe/C,MAAO,CACH/B,KAAM,2BACNI,QAhBYgB,IAAMC,IAAI,4BAA6B,CACnDM,OAAQ,CACJC,GAAIE,EACJC,MAAOA,KAEZT,KAAK,SAAAC,GACJ,OAAQA,EAASC,KAAKQ,IAAI,SAAAC,GACtB,OAAAhC,OAAAC,EAAA,EAAAD,CAAA,GACOgC,EADP,CAEIC,OAAQD,EAAME,GAAKF,EAAMG,GAAKH,EAAMI,GAAKJ,EAAMK,GAAKL,EAAMM,UAqCnE,SAASC,EAAcxB,GAI1B,MAAO,CACHhB,KAAK,iBACLI,QALYgB,IAAMqB,KAAK,kBAAkBzB,GACxCM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,6BCvKpB,SAASkB,EAAqBC,GAEzC,IAA+B5B,EAqBzB6B,EAAuB,SAAChB,GAE1Be,EAAME,QAAQC,KAAd,eAAAC,OAAkCnB,KAGhCoB,EAAiB,WAEnB,QAAIL,EAAMjC,WACPiC,EAAMjC,QAAQuC,OAAOC,KAAK,SAAAC,GAAQ,OAAOA,IAAQR,EAAMjD,KAAKS,MAAMyB,MAUzE,OACIwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,uBAAgBX,EAAMjC,QAAQ8C,SAAqC,KAA1Bb,EAAMjC,QAAQ8C,QAAkBb,EAAMjC,QAAQ8C,QAAU,qBACjGJ,EAAAC,EAAAC,cAAA,mCAA4BX,EAAMjC,QAAQ+C,KAA6B,KAAtBd,EAAMjC,QAAQ+C,IAAcd,EAAMjC,QAAQ+C,IAAM,sBAErGL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,MAAMI,GAAE,YAAAZ,OAAcJ,EAAMjC,QAAQkD,MAAOR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAaS,KAAK,UAC7EV,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,MAAMI,GAAE,iBAAAZ,OAAmBJ,EAAMjC,QAAQkD,MAAOR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAaS,KAAK,kBAG1FV,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,QACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACTP,IACDI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMK,MAAO,CAACC,QAAQ,SAAUL,GAAE,mBAAAZ,OAAqBJ,EAAMjC,QAAQkD,MAArE,sBACE,QAIdR,EAAAC,EAAAC,cAAA,cA9DmBvC,EA+DQ4B,EAAM5B,aA7DzBN,KAEZM,EAAYN,KAAKuB,IAAK,SAACiC,GACnB,OACIb,EAAAC,EAAAC,cAAA,MAAIY,IAAKD,EAAKL,KACVR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQ,IAAIY,KAAKF,EAAKG,MAAMC,sBAC1CjB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACVH,EAAAC,EAAAC,cAAA,KAAGgB,QAAS,kBAAM1B,EAAqBqB,EAAKL,OACvCZ,IAAmB,SAAW,YAOjD,YCqECuB,cAzFX,SAAAA,EAAY5B,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAH,IACdC,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAsE,GAAAM,KAAAH,KAAM/B,KASVmC,mBAAqB,SAACC,GAClBP,EAAKQ,SAAS,CACVC,aAAcF,EAAMG,OAAOC,MAAM,GACjCC,OAAQ,KAbEZ,EAkBlBa,WAAa,SAACC,GACVA,EAAEC,iBAEF,IAAM/D,EAAO,IAAIgE,SACjBhE,EAAKiE,OAAO,OAAQjB,EAAK7E,MAAMsF,aAAcT,EAAK7E,MAAMsF,aAAanB,MACrEtC,EAAKiE,OAAO,YAAajB,EAAK7B,MAAMb,WAEpCV,IACCqB,KAAK,sBAAuBjB,EAAM,CAC/BkE,iBAAkB,SAAAC,GAClBnB,EAAKQ,SAAS,CACVI,OAASO,EAAcP,OAASO,EAAcC,MAAS,SAI9DtE,KAAK,SAAAuE,GAEFrB,EAAK7B,MAAMmD,wBAnCDtB,EAuClBuB,kBAAoB,WAChB3E,IAAMC,IAAI,+BAAgC,CACtCM,OAAQ,CACJC,GAAI4C,EAAK7B,MAAMb,UACfC,MAAO,SAEZT,KAAK,SAAAC,GAEJyE,QAAQC,IAAI1E,GAEZ,IAAM2E,EAAU,UAAYC,OAAOC,SAASC,SAC5CF,OAAOG,KAAKJ,EAAU3E,EAASC,SAlDrBgD,EAuDlBxB,eAAiB,WAEb,QAAIwB,EAAK7B,MAAMjC,WACZ8D,EAAK7B,MAAMjC,QAAQuC,OAAOC,KAAK,SAAAC,GAAQ,OAAOA,IAAQqB,EAAK7B,MAAMjD,KAAKS,MAAMyB,MAvD/E4C,EAAK7E,MAAQ,CACTsF,aAAc,KACdG,OAAQ,GALEZ,wEAqEd,OACIpB,EAAAC,EAAAC,cAACF,EAAAC,EAAMkD,SAAP,KACC7B,KAAK1B,iBACFI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,QAAMkD,SAAU9B,KAAKW,YACjBjC,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,SAAOtD,KAAK,OAAO8D,KAAK,OAAO2C,SAAU/B,KAAKI,qBAC9C1B,EAAAC,EAAAC,cAAA,UAAQtD,KAAK,UAAb,WAEJoD,EAAAC,EAAAC,cAAA,SAAIoD,KAAKC,MAAMjC,KAAK/E,MAAMyF,OAAQ,GAAlC,iBACAhC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,UAAQgB,QAASI,KAAKqB,mBAAtB,2CAGP,aApFSa,aCKlBC,cAEH,SAAAA,EAAYlE,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAmC,IACdrC,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAA4G,GAAAhC,KAAAH,KAAM/B,KAgBVmE,oBAAsB,SAAC/B,GACnBP,EAAKQ,SAAS,CAAC+B,kBAAmBhC,EAAMG,OAAO8B,QAE/CxC,EAAK7B,MAAMsE,SAASpF,EAAwBkD,EAAMG,OAAO8B,MAAO,UApBlDxC,EAuBlB0C,eAAiB,SAAC1G,GACd,OACAA,EAASC,MAAQD,EAASC,KAAKZ,OAE/BW,EAASC,KAAKuB,IAAK,SAACiC,GAEhB,OACIb,EAAAC,EAAAC,cAAA,UAAQY,IAAKD,EAAKL,IAAKoD,MAAO/C,EAAKL,KAC9BK,EAAKH,QAKhB,MApCYU,EAwClB2C,mBAAqB,WACjB,OACI3C,EAAK7B,MAAMnC,SAASC,KAEpB+D,EAAK7B,MAAMnC,SAASC,KAAK2G,OAAQ,SAACnD,GAC9B,OAAOA,EAAKL,MAAQY,EAAK7E,MAAMoH,oBAChC,GAED,MAhDQvC,EAmDlBsB,mBAAqB,WACjBtB,EAAK7B,MAAMsE,SAASpF,EAAwB2C,EAAK7E,MAAMoH,kBAAmB,UAjD1EvC,EAAK7E,MAAQ,CACToH,kBAAmB,IAJTvC,oFAUXE,KAAK/B,MAAMjD,MACVgF,KAAK/B,MAAMsE,SHsCZ,CACHjH,KAAM,eACNI,QALYgB,IAAMC,IAAI,uBAAuBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,0CGUvE,OACI4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACfH,EAAAC,EAAAC,cAAA,SAAO+D,QAAQ,iBAAf,+BACAjE,EAAAC,EAAAC,cAAA,UAAQ1B,GAAG,gBAAgBoF,MAAOtC,KAAK/E,MAAMoH,kBAAmBN,SAAU/B,KAAKoC,qBAC3E1D,EAAAC,EAAAC,cAAA,UAAQ0D,MAAM,KACbtC,KAAKwC,eAAexC,KAAK/B,MAAMnC,aAKH,KAAjCkE,KAAK/E,MAAMoH,kBACP3D,EAAAC,EAAAC,cAACZ,EAADzC,OAAAqH,OAAA,CAAsBvG,YAAa2D,KAAK/B,MAAM5B,YAAaL,QAASgE,KAAKyC,sBAA0BzC,KAAK/B,QAExG,KAG6B,KAAjC+B,KAAK/E,MAAMoH,kBACP3D,EAAAC,EAAAC,cAACiE,EAADtH,OAAAqH,OAAA,CAAWxF,UAAW4C,KAAK/E,MAAMoH,kBAAmBrG,QAASgE,KAAKyC,qBAAsBrB,mBAAoBpB,KAAKoB,oBAAwBpB,KAAK/B,QAE9I,aA/EKiE,aA6FdY,kBAPf,SAAyB7H,GACrB,MAAO,CACHa,SAAUb,EAAMa,SAChBO,YAAapB,EAAMoB,cAIZyG,CAAyBX,GChGlCY,cAEF,SAAAA,EAAY9E,GACZ,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAA+C,IACIjD,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAwH,GAAA5C,KAAAH,KAAM/B,KASV+E,iBAAmB,SAAC3C,GAChBP,EAAKQ,SAAS,CAAC2C,MAAM5C,EAAMG,OAAO8B,SAXtCxC,EAaAoD,oBAAsB,SAAC7C,GACnBP,EAAKQ,SAAS,CAAC6C,SAAS9C,EAAMG,OAAO8B,SAdzCxC,EAwBAa,WAAa,SAACC,GACVA,EAAEC,iBACFf,EAAK7B,MAAMsE,SJ/BZ,SAAAa,GAAoC,IAAhBH,EAAgBG,EAAhBH,MAAME,EAAUC,EAAVD,SAI7B,MAAO,CACH7H,KAAK,aACLI,QALYgB,IAAMqB,KAAK,aAAa,CAACkF,QAAME,aAClCvG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QI6BfuG,CAAUvD,EAAK7E,SAxBnC6E,EAAK7E,MAAQ,CACTgI,MAAM,GACNE,SAAS,GACTG,MAAM,GACNzH,SAAQ,GANhBiE,yFAiB0ByD,GACnBA,EAAUvI,KAAKS,MAAM+H,QACpBxD,KAAK/B,MAAME,QAAQC,KAAK,sCAW5B,IAAIpD,EAAOgF,KAAK/B,MAAMjD,KACtB,OACI0D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMkD,SAAU9B,KAAKW,YACjBjC,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,QACLmI,YAAY,kBACZnB,MAAOtC,KAAK/E,MAAMgI,MAClBlB,SAAU/B,KAAKgD,oBAIvBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,WACLmI,YAAY,sBACZnB,MAAOtC,KAAK/E,MAAMkI,SAClBpB,SAAU/B,KAAKkD,uBAIvBxE,EAAAC,EAAAC,cAAA,UAAQtD,KAAK,UAAb,UAEAoD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEX7D,EAAKS,MACDiD,EAAAC,EAAAC,cAAA,WAAM5D,EAAKS,MAAMiI,SACpB,eA/DIxB,aA+EdY,kBANf,SAAyB7H,GACrB,MAAO,CACHD,KAAKC,EAAMD,OAIJ8H,CAAyBC,GCjEzBY,EAhBA,SAAC1F,GAEEvB,IAAMC,IAAI,eACvBC,KAAK,SAAAgH,GACFC,WAAW,WACP5F,EAAME,QAAQC,KAAK,MACpB,OAGP,OACIM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,uCCTLkF,cAEH,SAAAA,EAAY7F,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAA8D,IACdhE,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAuI,GAAA3D,KAAAH,KAAM/B,KAYV0C,WAAa,SAACC,GNgEX,IAAoB5E,EM/DnB4E,EAAEC,iBACFf,EAAK7B,MAAMsE,UN8DQvG,EM9DYT,OAAAC,EAAA,EAAAD,CAAA,GACxBuE,EAAK7E,MAAM8I,SADY,CAE1BxF,OAAO,CAACuB,EAAK7B,MAAMjD,KAAKS,MAAMyB,MNgE/B,CACH5B,KAAK,cACLI,QALYgB,IAAMqB,KAAK,eAAe/B,GACrCY,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UM3D3BgD,EAAK7B,MAAME,QAAQC,KAAK,MApBV0B,EAuBlBkE,aAAe,SAAC3D,EAAOjB,GACnB,IAAM6E,EAAW1I,OAAAC,EAAA,EAAAD,CAAA,GACVuE,EAAK7E,MAAM8I,UAElBE,EAAY7E,GAAQiB,EAAMG,OAAO8B,MAEjCxC,EAAKQ,SAAS,CACVyD,SAAUE,KA3BdnE,EAAK7E,MAAO,CACR8I,SAAS,CACL3E,KAAK,GACLN,QAAQ,GACRC,IAAI,KAPEe,wEAkCT,IAAAoE,EAAAlE,KACL,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,QAAMkD,SAAU9B,KAAKW,YACjBjC,EAAAC,EAAAC,cAAA,oCAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SAAOtD,KAAK,OACZmI,YAAY,MACZnB,MAAOtC,KAAK/E,MAAM8I,SAAS3E,KAC3B2C,SAAU,SAAC1B,GAAD,OAAW6D,EAAKF,aAAa3D,EAAO,YAElD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SAAOtD,KAAK,OACZmI,YAAY,UACZnB,MAAOtC,KAAK/E,MAAM8I,SAASjF,QAC3BiD,SAAU,SAAC1B,GAAD,OAAW6D,EAAKF,aAAa3D,EAAO,eAElD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SAAOtD,KAAK,OACZmI,YAAY,sBACZnB,MAAOtC,KAAK/E,MAAM8I,SAAShF,IAC3BgD,SAAU,SAAC1B,GAAD,OAAW6D,EAAKF,aAAa3D,EAAO,WAElD3B,EAAAC,EAAAC,cAAA,UAAQtD,KAAK,UAAb,wBA5De4G,aAyEpBY,kBANf,SAAyB7H,GACrB,MAAO,CACHe,QAASf,EAAMa,WAIRgH,CAAyBgB,WCwKxBK,cAtOZ,SAAAA,EAAYlG,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAmE,IACdrE,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAA4I,GAAAhE,KAAAH,KAAM/B,KAbVmG,kBAAoB,SAACC,GACjB,IAAI3E,EAAO,IAAID,KAAK4E,GAEhBC,GAAY,KAAO5E,EAAK6E,WAAW,IAAIC,OAAO,GAC9CC,GAAU,IAAO/E,EAAKgF,WAAYF,OAAO,GAK7C,OAJe9E,EAAKiF,cAAc,IAAIL,EAAS,IAAIG,GAOrC3E,EA6ClB8E,eAAiB,SAACvE,EAAMjB,GAWpB,IAAIyF,EAAkC,KAAvBxE,EAAMG,OAAO8B,MAAewC,SAASzE,EAAMG,OAAO8B,OAAS,GACtEyC,EAAWjF,EAAK7E,MACpB8J,EAAS3F,GAAQyF,EACjBE,EAAQ,OACJA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GAEZjF,EAAKQ,SAASyE,IAlEAjF,EAoElBkF,gBAAkB,SAAC3E,EAAMjB,GACrBU,EAAKQ,SAAL/E,OAAA0J,EAAA,EAAA1J,CAAA,GAAgB6D,EAAMiB,EAAMG,OAAO8B,QACnChB,QAAQC,IAAI,gBAAgBlB,EAAMG,OAAO8B,QAtE3BxC,EA2ElBa,WAAa,SAACC,GACVA,EAAEC,iBAGF,IAAIqE,EAAa3J,OAAAC,EAAA,EAAAD,CAAA,GAAOuE,EAAK7E,OAG7B,IAAI,IAAIkK,KAFRD,EAAcxF,KAAO,IAAID,KAAKyF,EAAcxF,MAAM0F,SAElCF,EAEe,KAAxBA,EAAcC,WACND,EAAcC,GAI7BrF,EAAK7B,MAAMoH,eAAeH,IAtF1BjH,EAAM3B,WACFwD,EAAK7E,MAAQ,CAELiE,IAAIjB,EAAM3B,WAAW4C,IACrB9B,UAAUa,EAAM3B,WAAWc,UAC3BsC,KAAKI,EAAKsE,kBAAkBnG,EAAM3B,WAAWoD,MAC7CjC,GAAGQ,EAAM3B,WAAWmB,GACpBC,GAAGO,EAAM3B,WAAWoB,GACpBC,GAAGM,EAAM3B,WAAWqB,GACpBC,GAAGK,EAAM3B,WAAWsB,GACpBC,GAAGI,EAAM3B,WAAWuB,GACpBL,OAAOS,EAAM3B,WAAWkB,OACxB8H,IAAIrH,EAAM3B,WAAWgJ,IACrBC,IAAItH,EAAM3B,WAAWiJ,IACrBC,GAAGvH,EAAM3B,WAAWkJ,GACpBC,IAAIxH,EAAM3B,WAAWmJ,KAK7B3F,EAAK7E,MAAQ,CAELiE,IAAI,GACJ9B,UAAU0C,EAAK7B,MAAMb,UACrBsC,KAAK,GACLjC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHL,OAAO,GACP8H,IAAI,GACJC,IAAI,GACJC,GAAG,GACHC,IAAI,IArCF3F,wEA6FT,IAAAoE,EAAAlE,KAGL,OACItB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMkD,SAAU9B,KAAKW,YACbjC,EAAAC,EAAAC,cAAA,mCAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACI1B,GAAG,SACH5B,KAAK,OACLgH,MAAOtC,KAAK/E,MAAMyE,KAClBqC,SAAU,SAAC1B,GAAD,OAAS6D,EAAKc,gBAAgB3E,EAAM,SAC9CqF,SAAU1F,KAAK/B,MAAMyH,YAI7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,oBACZnB,MAAOtC,KAAK/E,MAAMwC,GAClBsE,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,OAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAG7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,iBACZnB,MAAOtC,KAAK/E,MAAMyC,GAClBqE,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,OAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAG7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,qBACZnB,MAAOtC,KAAK/E,MAAM0C,GAClBoE,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,OAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAG7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,uBACZnB,MAAOtC,KAAK/E,MAAM2C,GAClBmE,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,OAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAG7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,eACZnB,MAAOtC,KAAK/E,MAAM4C,GAClBkE,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,OAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAG7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QAAArD,OAAA0J,EAAA,EAAA1J,CAAA,CACID,KAAK,SACLmI,YAAY,SACZnB,MAAOtC,KAAK/E,MAAMuC,OAClBuE,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,WAC7CqF,SAAU1F,KAAK/B,MAAMyH,UALzB,iBASJhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,0BACZnB,MAAOtC,KAAK/E,MAAMqK,IAClBvD,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,QAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAG7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,yBACZnB,MAAOtC,KAAK/E,MAAMsK,IAClBxD,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,QAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAG7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,WACZnB,MAAOtC,KAAK/E,MAAMuK,GAClBzD,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,OAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAG7BhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,kBACZnB,MAAOtC,KAAK/E,MAAMwK,IAClB1D,SAAU,SAAC1B,GAAD,OAAS6D,EAAKU,eAAevE,EAAM,QAC7CqF,SAAU1F,KAAK/B,MAAMyH,YAIJ,aAAxB1F,KAAK/B,MAAMyH,SACZhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGgB,QAASI,KAAKW,YAAjB,gBAEF,KACuB,aAAxBX,KAAK/B,MAAMyH,SACZhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACPH,EAAAC,EAAAC,cAAA,KAAGgB,QAASI,KAAK/B,MAAM0H,kBAAvB,4BAEN,cA7OOzD,aCKtB0D,cAEH,SAAAA,EAAY3H,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAA4F,IACd9F,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAqK,GAAAzF,KAAAH,KAAM/B,KAYV4H,qBAAuB,SAACvJ,GRqKrB,IAA0BQ,EQpKzBR,EAAW4C,IACPY,EAAK7B,MAAMsE,URmKUzF,EQnKgBR,ERuKtC,CACHhB,KAAK,oBACLI,QALYgB,IAAMqB,KAAN,wBAAmCjB,GACtCF,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UQnK/BgD,EAAK7B,MAAMsE,SAASzE,EAAcxB,IAGtCwD,EAAK7B,MAAME,QAAQC,KAAK,MApBV0B,EAuBlB6F,iBAAmB,WRqKhB,IAA0BzI,EQpKtBuE,OAAOqE,QAAQ,kHAMfhG,EAAK7B,MAAMsE,UR8JWrF,EQ9Je4C,EAAK7B,MAAM3B,WAAW4C,IRkK3D,CACH5D,KAAK,oBACLI,QALYgB,IAAMqJ,OAAN,4BAAA1H,OAAyCnB,IACxCN,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UQ/JpCgD,EAAK7B,MAAME,QAAQC,KAAK,OA/Bb0B,EAmClBxB,eAAiB,WACb,QAAIwB,EAAK7B,MAAMjC,WACZ8D,EAAK7B,MAAMjC,QAAQuC,OAAOC,KAAK,SAAAC,GAAQ,OAAOA,IAAQqB,EAAK7B,MAAMjD,KAAKS,MAAMyB,MArCjE4C,oFAIE,IRoIM5C,EQpINgH,EAAAlE,KAChBA,KAAK/B,MAAMsE,URmIWrF,EQnIY8C,KAAK/B,MAAM+H,MAAM/I,OAAOC,GRgJvD,CACH5B,KAAM,iBACNI,QAdYgB,IAAMC,IAAI,qBAAsB,CAC5CM,OAAQ,CACJC,GAAIA,KAETN,KAAK,SAAAC,GACJ,IAAMU,EAAQV,EAASC,KACnB,OAAAvB,OAAAC,EAAA,EAAAD,CAAA,GACOgC,EADP,CAEIC,OAAQD,EAAME,GAAKF,EAAMG,GAAKH,EAAMI,GAAKJ,EAAMK,GAAKL,EAAMM,UQ5IHjB,KAAK,SAACuE,GAEjE+C,EAAKjG,MAAMsE,SAASxF,EAAWoE,EAAIzF,QAAQ0B,yDAyC/C,OACI4C,KAAK/B,MAAM3B,WAEPoC,EAAAC,EAAAC,cAACqH,EAAD,CAAgBzG,IAAKQ,KAAK/B,MAAM3B,WAAW4C,IAC3C9B,UAAW4C,KAAK/B,MAAM3B,WAAWc,UACjCiI,eAAgBrF,KAAK6F,qBACrBF,iBAAkB3F,KAAK2F,iBACvBrJ,WAAY0D,KAAK/B,MAAM3B,WACvBoJ,SAAW1F,KAAK1B,iBAAmB,GAAK,aAE1C,sCAMN,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVmB,KAAKkG,4BArEahE,aA6FxBY,kBAPf,SAAyB7H,GACrB,MAAO,CACHqB,WAAYrB,EAAMoB,YAAYC,WAC9BN,QAASf,EAAMa,SAASE,UAIjB8G,CAAyB8C,GCkCxBO,EApIM,SAAClI,GAEnB,IASM2G,EAAiB,SAACvE,EAAMjB,GAC1BnB,EAAMmI,UAAUnI,EAAMoI,OAAQhG,EAAMG,OAAO8B,MAAOlD,IAWtD,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,QAAMkD,SANS,SAAClB,GAChBA,EAAEC,mBAMMnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACI1B,GAAG,SACH5B,KAAK,OACLgH,MAAOrE,EAAMyB,KACbqC,SAAU,SAAC1B,GAAD,OAlBN,SAACA,EAAMjB,GAC3BnB,EAAMqI,WAAWrI,EAAMoI,OAAQhG,EAAMG,OAAO8B,MAAOlD,GAiBhB4F,CAAgB3E,EAAM,YAIjD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,oBACZnB,MAAOrE,EAAMR,GACbsE,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,UAGhD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,iBACZnB,MAAOrE,EAAMP,GACbqE,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,UAGhD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,qBACZnB,MAAOrE,EAAMN,GACboE,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,UAGhD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,uBACZnB,MAAOrE,EAAML,GACbmE,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,UAGhD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,eACZnB,MAAOrE,EAAMJ,GACbkE,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,UAGhD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,SACZnB,MAAOrE,EAAMT,OACbuE,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,WACxCqF,UAAQ,KAGhBhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,0BACZnB,MAAOrE,EAAMqH,IACbvD,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,WAGhD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,yBACZnB,MAAOrE,EAAMsH,IACbxD,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,WAGhD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,WACZnB,MAAOrE,EAAMuH,GACbzD,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,UAGhD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,SACLmI,YAAY,kBACZnB,MAAOrE,EAAMwH,IACb1D,SAAU,SAAC1B,GAAD,OAASuE,EAAevE,EAAM,cCvHzDkG,cAEH,SAAAA,EAAYtI,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAuG,IACdzG,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAgL,GAAApG,KAAAH,KAAM/B,KAsBV2G,eAAiB,SAAC4B,EAAKlE,EAAMlD,GACzB,IAAIyF,EAAqB,KAAVvC,EAAewC,SAASxC,GAAS,GAC5CyC,EAAWjF,EAAK7E,MACpB8J,EAAS1I,YAAYmK,GAAMpH,GAAQyF,EACnCE,EAAS1I,YAAYmK,GAArB,OACIzB,EAAS1I,YAAYmK,GAArB,GACAzB,EAAS1I,YAAYmK,GAArB,GACAzB,EAAS1I,YAAYmK,GAArB,GACAzB,EAAS1I,YAAYmK,GAArB,GACAzB,EAAS1I,YAAYmK,GAArB,GAEJ1G,EAAKQ,SAASyE,IAlCAjF,EAqClBkF,gBAAkB,SAACwB,EAAKlE,EAAMlD,GAI1B,IAAI2F,EAAWjF,EAAK7E,MACpB8J,EAAS1I,YAAYmK,GAAMpH,GAAQkD,EACnCxC,EAAKQ,SAASyE,IA3CAjF,EA4DlBsE,kBAAoB,SAACC,GACjB,IAAI3E,EAAO,IAAID,KAAK4E,GAChBC,GAAY,KAAO5E,EAAK6E,WAAW,IAAIC,OAAO,GAC9CC,EAAS/E,EAAKgF,UAElB,OADehF,EAAKiF,cAAc,IAAIL,EAAS,IAAIG,GAhErC3E,EAoElB+F,qBAAuB,SAACvJ,GACpB,IAAI4I,EAAgB5I,EAGpB,IAAI,IAAI6I,KAFRD,EAAcxF,KAAO,IAAID,KAAKyF,EAAcxF,MAAM0F,SAElCF,EAEe,KAAxBA,EAAcC,WACND,EAAcC,GAI7BrF,EAAK7B,MAAMsE,SAASzE,EAAcoH,KA/EpBpF,EAmFlB2G,eAAiB,WAGb,IAAI,IAAIC,KAAK5G,EAAK7E,MAAMoB,YAGpByD,EAAK+F,qBAAqB/F,EAAK7E,MAAMoB,YAAYqK,IAErD5G,EAAK7B,MAAME,QAAQC,KAAK,MA3FV0B,EA8FlBqG,cAAgB,WACZ,IAAMQ,EAAoB,CACtBvJ,UAAU0C,EAAK7B,MAAM+H,MAAM/I,OAAOC,GAClCwC,KAAK,GACLjC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHL,OAAO,GACP8H,IAAI,GACJC,IAAI,GACJC,GAAG,GACHC,IAAI,IAIJV,EAAWjF,EAAK7E,MACpB8J,EAAS1I,YAAY+B,KAAKuI,GAE1B7G,EAAKQ,SAASyE,IAlHAjF,EAuHlBxB,eAAiB,WACb,QAAIwB,EAAK7B,MAAMjC,WACZ8D,EAAK7B,MAAMjC,QAAQuC,OAAOC,KAAK,SAAAC,GAAQ,OAAOA,IAAQqB,EAAK7B,MAAMjD,KAAKS,MAAMyB,MAtH/E4C,EAAK7E,MAAQ,CACToB,YAAa,CACT,CACIe,UAAU0C,EAAK7B,MAAM+H,MAAM/I,OAAOC,GAClCwC,KAAK,GACLjC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHC,GAAG,GACHL,OAAO,GACP8H,IAAI,GACJC,IAAI,GACJC,GAAG,GACHC,IAAI,MAjBF3F,oFA+CdE,KAAK/B,MAAMsE,SAASxF,EAAWiD,KAAK/B,MAAM+H,MAAM/I,OAAOC,uDAGjCqG,iDAKnBvD,KAAK/B,MAAMjC,UAAYgE,KAAK1B,kBAC3B0B,KAAK/B,MAAME,QAAQC,KAAK,iDA2Eb,IAAA8F,EAAAlE,KACf,OACIA,KAAK/E,MAAMoB,YAAYiB,IAAI,SAACiC,EAAMmH,GAC9B,OACIhI,EAAAC,EAAAC,cAACgI,EAADrL,OAAAqH,OAAA,CAAepD,IAAKkH,EAAGL,OAAQK,GAAOnH,EAAtC,CAA4C6G,UAAWlC,EAAKU,eAAgB0B,WAAYpC,EAAKc,sDAOzG,OAAGhF,KAAK1B,iBAEJI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,kCACCoB,KAAK6G,oBACNnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGgB,QAASI,KAAKyG,gBAAjB,eACA/H,EAAAC,EAAAC,cAAA,KAAGgB,QAASI,KAAKmG,eAAjB,2BAKA,YA5JkBjE,aAsKvBY,kBANf,SAAyB7H,GACrB,MAAO,CACHe,QAASf,EAAMa,SAASE,UAIjB8G,CAAyByD,GCzKlCO,6MAEF7L,MAAO,CACHgI,MAAM,GACNE,SAAS,GACT4D,WAAW,EACXzD,MAAM,MAQVN,iBAAmB,SAAC3C,GAChBP,EAAKQ,SAAS,CAAC2C,MAAM5C,EAAMG,OAAO8B,WAEtCY,oBAAqB,SAAC7C,GAClBP,EAAKQ,SAAS,CAAC6C,SAAS9C,EAAMG,OAAO8B,WAEzC0E,sBAAwB,SAAC3G,GACrB,IAAIwE,EAAkC,MAAvBxE,EAAMG,OAAO8B,MAAgB,EAAI,EAChDxC,EAAKQ,SAAS,CAACyG,WAAWlC,OAe9BlE,WAAa,SAACC,GACVA,EAAEC,iBACFf,EAAKQ,SAAS,CAACgD,MAAM,KAErBxD,EAAK7B,MAAMsE,SXVZ,SAAsBvH,EAAKiM,GAC9B,IAAMrD,EAAUlH,IAAMqB,KAAN,gBAA2B/C,GAE3C,OAAO,SAACuH,GACJqB,EAAQhH,KAAK,SAAAsK,GAAU,IAARpK,EAAQoK,EAARpK,KACPnB,EAAQmB,EAAKjB,QAAL,GAAAwC,OAAA9C,OAAA4L,EAAA,EAAA5L,CAAmB0L,GAAnB,CAA4BnK,EAAK9B,OAAMiM,EAC/CpK,EAAW,CACXhB,QAAQiB,EAAKjB,QACbF,SAGJ4G,EAAS,CACLjH,KAAK,gBACLI,QAAQmB,OWHIuK,CAAa,CAC7BnE,MAAMnD,EAAK7E,MAAMgI,MACjBE,SAASrD,EAAK7E,MAAMkI,SACpB4D,WAAWjH,EAAK7E,MAAM8L,YACxBjH,EAAK7B,MAAMjD,KAAKW,WAItB0L,UAAY,SAACrM,GAAD,OACRA,EAAKW,MACDX,EAAKW,MAAM2B,IAAI,SAAAiC,GAAI,OACfb,EAAAC,EAAAC,cAAA,MAAIY,IAAKD,EAAKL,KACVR,EAAAC,EAAAC,cAAA,UAAKW,EAAK0D,OACVvE,EAAAC,EAAAC,cAAA,UAAKW,EAAKwH,WAAa,iBAAmB,kBAGrD,0FA/CD/G,KAAK/B,MAAMsE,SAAS9F,uDAeE8G,IACS,IAA5BA,EAAUvI,KAAKY,SACdoE,KAAKM,SAAS,CAACgD,MAAM,oBAErBtD,KAAKM,SAAS,CACV2C,MAAM,GACNE,SAAS,GACT4D,WAAW,qCA8BnB,IAAI/L,EAAOgF,KAAK/B,MAAMjD,KACtB,OACI0D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMkD,SAAU9B,KAAKW,YACjBjC,EAAAC,EAAAC,cAAA,oCAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,QACLmI,YAAY,QACZnB,MAAOtC,KAAK/E,MAAMgI,MAClBlB,SAAU/B,KAAKgD,oBAIvBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SACItD,KAAK,WACLmI,YAAY,eACZnB,MAAOtC,KAAK/E,MAAMkI,SAClBpB,SAAU/B,KAAKkD,uBAIvBxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UACI0D,MAAOtC,KAAK/E,MAAM8L,WAClBhF,SAAU/B,KAAKgH,uBAEftI,EAAAC,EAAAC,cAAA,UAAQ0D,MAAM,KAAd,eACA5D,EAAAC,EAAAC,cAAA,UAAQ0D,MAAM,KAAd,oBAIR5D,EAAAC,EAAAC,cAAA,UAAQtD,KAAK,UAAb,eACAoD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACVmB,KAAK/E,MAAMqI,QAIpB5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,0BAGRF,EAAAC,EAAAC,cAAA,aACKoB,KAAKqH,UAAUrM,cAhHrBsM,iBA8HRxE,kBANf,SAAyB7H,GACrB,MAAM,CACFD,KAAKC,EAAMD,OAIJ8H,CAAyBgE,6EC1HjCS,eAEH,SAAAA,EAAYtJ,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAuH,IACdzH,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAgM,GAAApH,KAAAH,KAAM/B,KAEDhD,MAAQ,CACTuM,OAAQ,CACJ/J,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJL,QAAQ,EACR8H,KAAK,EACLC,KAAK,EACLC,IAAI,EACJC,KAAK,IAdC3F,oFAsBdE,KAAK/B,MAAMsE,SAASpF,EAAwB6C,KAAK/B,MAAM+H,MAAM/I,OAAOC,KAAKN,KAAK,gEAMxD2G,GAGtB,IAAIkE,EAAUlE,EAAUlH,YAGxB,IAAI,IAAI8I,KAAQsC,EAEZA,EAAQtC,GAAMzF,KAAO,IAAID,KAAKgI,EAAQtC,GAAMzF,MAAMC,qBAGtDK,KAAKM,SAAL/E,OAAAC,EAAA,EAAAD,CAAA,GAAkByE,KAAK/E,MAAvB,CAA8B6B,KAAK2K,+CAGrB7G,GAoBd,IAAImE,EAAW/E,KAAK/E,MAEpB8J,EAASyC,OAAO5G,EAAEJ,OAAOpB,MAAQwB,EAAEJ,OAAOkH,QAI1C1H,KAAKM,SAASyE,+CAGC,IAAAb,EAAAlE,KAEX2H,EAAapM,OAAOqM,KAAK5H,KAAK/E,MAAMuM,QAAQlK,IAAI,SAAA6H,GAChD,OACIzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBW,IAAK2F,GACtCzG,EAAAC,EAAAC,cAAA,aAAQuG,EAAR,OACAzG,EAAAC,EAAAC,cAAA,SACAtD,KAAK,WACL8D,KAAM+F,EACNuC,QAASxD,EAAKjJ,MAAMuM,OAAOrC,GAC3BpD,SAAU,SAACnB,GAAD,OAAOsD,EAAK2D,kBAAkBjH,SAMpD,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACV8I,yCAKA,IAAAG,EAAA9H,KAEH+H,EAAa,CACftK,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJL,OAAQ,UACR8H,IAAK,UACLC,IAAK,UACLC,GAAI,UACJC,IAAK,WAGHuC,EAAczM,OAAOqM,KAAK5H,KAAK/E,MAAMuM,QAAQlK,IAAI,SAAC6H,EAAMuB,GAC1D,OACIoB,EAAK7M,MAAMuM,OAAOrC,GACdzG,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAMzI,IAAKkH,EAAGpL,KAAK,WAAW4M,QAAS/C,EAAMgD,OAAQJ,EAAW5C,KAEhE,OAIZ,OACInF,KAAK/B,MAAM5B,YACPqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQ,KACtC5J,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAWF,MAAO,IAAKG,OAAQ,IAAK1L,KAAMkD,KAAK/E,MAAM6B,KACrD2L,OAAQ,CAACC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAC1CnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAOZ,QAAQ,SACfxJ,EAAAC,EAAAC,cAACmK,EAAA,EAAD,MACArK,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAeC,gBAAgB,QAC/BvK,EAAAC,EAAAC,cAACsK,GAAA,EAAD,MACAxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,MACCnB,KAIf,sCAKN,OACItJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVmB,KAAKoJ,oBACLpJ,KAAKqJ,sBA/IenH,aA2JtBY,mBANf,SAAyB7H,GACrB,MAAO,CACHoB,YAAapB,EAAMoB,YAAYN,OAIxB+G,CAAyByE,IClGzB+B,eA7DX,SAAAA,EAAYrL,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAsJ,IACdxJ,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAA+N,GAAAnJ,KAAAH,KAAM/B,KAMVsL,YAAc,SAAClJ,GACXP,EAAKQ,SAAS,CAAC2C,MAAO5C,EAAMG,OAAO8B,SARrBxC,EAWlBa,WAAa,SAACC,GACVA,EAAEC,iBAqBF,IAAI2I,EAAW1J,EAAK7B,MAAMtC,MAAM+G,OAAO,SAAA+G,GACnC,OAAOA,EAAIxG,QAAUnD,EAAK7E,MAAMgI,QAKpCnD,EAAK7B,MAAMyL,WAAWF,EAAS,KArC/B1J,EAAK7E,MAAQ,CACTgI,MAAO,IAHGnD,wEA2Cd,OACIpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,aAAQoB,KAAK/B,MAAM0L,UACnBjL,EAAAC,EAAAC,cAAA,SACI1B,GAAG,UACHoF,MAAOtC,KAAK/E,MAAMgI,MAClBlB,SAAU/B,KAAKuJ,cAEnB7K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACPH,EAAAC,EAAAC,cAAA,KAAGgB,QAASI,KAAKW,YAAjB,eAvDDuB,aC+BZ0H,GA/BE,SAAC3L,GAEd,IAAmBtC,EAanB,OACA+C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKX,EAAM4L,UAGnBnL,EAAAC,EAAAC,cAAA,aACKX,EAAMtC,QAtBAA,EAsBkBsC,EAAMtC,OAnBjCR,OAAS,EACXQ,EAAM2B,IAAI,SAAAiC,GAAI,OACVb,EAAAC,EAAAC,cAAA,MAAIY,IAAKD,EAAKL,KACVR,EAAAC,EAAAC,cAAA,UAAKW,EAAK0D,UAgB0B,SClBjD6G,eAEH,SAAAA,EAAY7L,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAA8J,IACdhK,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAuO,GAAA3J,KAAAH,KAAM/B,KA2BVsL,YAAc,SAAClJ,EAAMjB,GAIjB,IAAI2F,EAAWjF,EAAK7E,MACpB8J,EAAS/I,QAAQoD,GAAQiB,EAAMG,OAAO8B,MACtCxC,EAAKQ,SAASyE,IAlCAjF,EAqClBa,WAAa,SAACC,GfqDX,IAAuB9D,EepDtB8D,EAAEC,iBACFf,EAAK7B,MAAMsE,UfmDWzF,EenDYgD,EAAK7E,MAAMe,QfuD1C,CACHV,KAAK,iBACLI,QALYgB,IAAMqB,KAAN,qBAAgCjB,GACnCF,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UepDnCgD,EAAK7B,MAAME,QAAQC,KAAK,MAxCV0B,EA2ClBiK,YAAc,SAAC/O,GAEX,IAAIA,IAAS8E,EAAK7E,MAAMe,QAAS,OAAO,KAGxC,IAAI8D,EAAK7E,MAAMe,QAAQuC,OAAOC,KAAK,SAAAC,GAAQ,OAAOA,IAAQzD,EAAKkE,MAAM,CACjE,IAAI6F,EAAWjF,EAAK7E,MACpB8J,EAAS/I,QAAQuC,OAASwG,EAAS/I,QAAQuC,OAAOF,OAAOrD,EAAKkE,KAI1D6F,EAAS/I,QAAQL,MAAQoJ,EAAS/I,QAAQL,MAAM+G,OAAO,SAAAsH,GAAM,OAAOA,IAAMhP,EAAKkE,MAGnFY,EAAKQ,SAASyE,KAzDJjF,EA6DlBmK,WAAa,SAACjP,GAEV,IAAIA,IAAS8E,EAAK7E,MAAMe,QAAS,OAAO,KAGxC,IACM8D,EAAK7E,MAAMe,QAAQL,MAAM6C,KAAK,SAAAiL,GAAQ,OAAOA,IAAQzO,EAAKkE,QACvDY,EAAK7E,MAAMe,QAAQuC,OAAOC,KAAK,SAAAC,GAAQ,OAAOA,IAAQzD,EAAKkE,MAC/D,CACD,IAAI6F,EAAWjF,EAAK7E,MACpB8J,EAAS/I,QAAQL,MAAQoJ,EAAS/I,QAAQL,MAAM0C,OAAOrD,EAAKkE,KAE5DY,EAAKQ,SAASyE,KAzEJjF,EA6ElBoK,aAAe,SAACC,GACZ,OAAIrK,EAAK7B,MAAMjD,KAAKW,MACjBmE,EAAK7B,MAAMjD,KAAKW,MAAMR,OACd2E,EAAK7B,MAAMjD,KAAKW,MAAM+G,OAAO,SAAA+G,GAChC,OACIU,EAAQ3L,KAAK,SAAA4L,GAAG,OAAIA,IAAQX,EAAIvK,QAMjCiL,EAAQ3L,KAAK,SAAA4L,GAAG,OAAIA,IAAQtK,EAAK7B,MAAMjD,KAAKW,MAAMuD,MAV3B,MA9EpBY,EA4FlBuK,cAAgB,WfQb,IAAuBrN,EePnByE,OAAOqE,QAAQ,2IAMdhG,EAAK7B,MAAMsE,UfCOvF,EeDgB8C,EAAK7B,MAAMjC,QAAQkD,IfQtD,CACH5D,KAAK,iBACLI,QARYgB,IAAMqJ,OAAN,qBAAmC,CAC/C9I,OAAQ,CACJC,GAAIF,KAETJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UeLrBgD,EAAK7B,MAAME,QAAQC,KAAK,OApGd0B,EAwGlBxB,eAAiB,WAEb,QAAGwB,EAAK7E,MAAMe,QAAQuC,OAAOC,KAAK,SAAAC,GAAQ,OAAOA,IAAQqB,EAAK7B,MAAMjD,KAAKS,MAAMyB,MAxG/E4C,EAAK7E,MAAQ,CACTe,QAAS,CACLkB,GAAI,GACJkC,KAAM,GACNN,QAAS,GACTC,IAAK,GACLR,OAAO,GACP5C,MAAM,KATAmE,oFAedE,KAAK/B,MAAMsE,SAASxF,EAAWiD,KAAK/B,MAAM+H,MAAM/I,OAAOC,KAAKN,KAAK,cAKjEoD,KAAK/B,MAAMsE,SAAS9F,uDAGE8G,GAEtBvD,KAAKM,SAAS,CAACtE,QAAQuH,EAAUvH,2CA2F5B,IAAAkI,EAAAlE,KAGL,MAA+B,KAA5BA,KAAK/E,MAAMe,QAAQoD,KAEdV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACfH,EAAAC,EAAAC,cAAA,QAAMkD,SAAU9B,KAAKW,YACjBjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACI1B,GAAG,OACHoF,MAAOtC,KAAK/E,MAAMe,QAAQoD,KAC1B2C,SAAU,SAAC1B,GAAD,OAAS6D,EAAKqF,YAAYlJ,EAAM,SAC1CqF,SAAW1F,KAAK1B,iBAAmB,GAAK,cAGhDI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACI1B,GAAG,UACHoF,MAAOtC,KAAK/E,MAAMe,QAAQ8C,QAC1BiD,SAAU,SAAC1B,GAAD,OAAS6D,EAAKqF,YAAYlJ,EAAM,YAC1CqF,SAAW1F,KAAK1B,iBAAmB,GAAK,cAGhDI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SACI1B,GAAG,MACHoF,MAAOtC,KAAK/E,MAAMe,QAAQ+C,IAC1BgD,SAAU,SAAC1B,GAAD,OAAS6D,EAAKqF,YAAYlJ,EAAM,QAC1CqF,SAAW1F,KAAK1B,iBAAmB,GAAK,cAK/C0B,KAAK1B,iBACNI,EAAAC,EAAAC,cAAC0L,GAAD,CACI3O,MAAOqE,KAAK/B,MAAMjD,KAAKW,MACvB+N,WAAY1J,KAAK+J,aAFrB,gCAGE,KACFrL,EAAAC,EAAAC,cAAC2L,GAAD,CACI5O,MAAOqE,KAAKkK,aAAalK,KAAK/E,MAAMe,QAAQuC,QAC5CsL,OAAO,kBACPnE,SAAW1F,KAAK1B,iBAAmB,UAAY,aAClD0B,KAAK1B,iBACNI,EAAAC,EAAAC,cAAC0L,GAAD,CACI3O,MAAOqE,KAAK/B,MAAMjD,KAAKW,MACvB+N,WAAY1J,KAAKiK,YAFrB,6BAGE,KACFvL,EAAAC,EAAAC,cAAC2L,GAAD,CACI5O,MAAOqE,KAAKkK,aAAalK,KAAK/E,MAAMe,QAAQL,OAC5CkO,OAAO,eACPnE,SAAW1F,KAAK1B,iBAAmB,UAAY,aAElD0B,KAAK1B,iBACNI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGgB,QAASI,KAAKW,YAAjB,gBAEF,KACDX,KAAK1B,iBACNI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGgB,QAASI,KAAKqK,eAAjB,+BAEF,QAMN,YA7LYnI,aAwMjBY,mBAPf,SAAyB7H,GACrB,MAAO,CAEHe,QAASf,EAAMa,SAASE,UAIjB8G,CAAyBgH,ICxIzBU,eAnEX,SAAAA,EAAYvM,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAwK,IACd1K,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAiP,GAAArK,KAAAH,KAAM/B,KASVmC,mBAAqB,SAACC,GAClBP,EAAKQ,SAAS,CACVC,aAAcF,EAAMG,OAAOC,MAAM,GACjCC,OAAQ,EACRtD,UAAW,8BAdD0C,EAkBlBa,WAAa,SAACC,GACVA,EAAEC,iBAGF,IAAM/D,EAAO,IAAIgE,SACjBhE,EAAKiE,OAAO,OAAQjB,EAAK7E,MAAMsF,aAAcT,EAAK7E,MAAMsF,aAAanB,MACrEtC,EAAKiE,OAAO,YAAajB,EAAK7E,MAAMmC,WAEpCV,IACCqB,KAAK,sBAAuBjB,EAAM,CAC/BkE,iBAAkB,SAAAC,GAClBnB,EAAKQ,SAAS,CACVI,OAASO,EAAcP,OAASO,EAAcC,MAAS,SAI9DtE,KAAK,SAAAuE,OAlCQrB,EAuClBuB,kBAAoB,WAChB3E,IAAMC,IAAI,+BAAgC,CACtCM,OAAQ,CACJC,GAAI4C,EAAK7E,MAAMmC,UACfC,MAAO,SAEZT,KAAK,SAAAC,OA1CRiD,EAAK7E,MAAQ,CACTsF,aAAc,KACdG,OAAQ,EACRtD,UAAW,4BAND0C,wEAqDd,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,QAAMkD,SAAU9B,KAAKW,YACjBjC,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,SAAOtD,KAAK,OAAO8D,KAAK,OAAO2C,SAAU/B,KAAKI,qBAC9C1B,EAAAC,EAAAC,cAAA,UAAQtD,KAAK,UAAb,WAEJoD,EAAAC,EAAAC,cAAA,SAAIoD,KAAKC,MAAMjC,KAAK/E,MAAMyF,OAAQ,GAAlC,iBACAhC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,UAAQgB,QAASI,KAAKqB,mBAAtB,gCA/Daa,kCCqGjBY,mBANf,SAAyB7H,GACrB,MAAM,CACFD,KAAMC,EAAMD,OAIL8H,CAnGM,SAAC7E,EAADmF,GAAmBA,EAAVpI,KAAU,IAE9ByP,EAAQ,CACV,CACInP,KAAK,UACLoP,KAAK,OACLC,KAAK,UACLC,KAAK,IACLC,YAAW,GAEf,CACIvP,KAAK,UACLoP,KAAK,YACLC,KAAK,6BACLC,KAAK,iBACLC,YAAW,EACXC,OAAM,GAEV,CACIxP,KAAK,UACLoP,KAAK,UACLC,KAAK,YACLC,KAAK,SACLC,YAAW,EACXE,SAAQ,GAEZ,CACIzP,KAAK,UACLoP,KAAK,WACLC,KAAK,iBACLC,KAAK,UACLC,YAAW,GAEf,CACIvP,KAAK,UACLoP,KAAK,cACLC,KAAK,yBACLC,KAAK,eACLC,YAAW,IAIbG,EAAU,SAACzL,EAAKmH,GAAN,OACZhI,EAAAC,EAAAC,cAAA,OAAKY,IAAKkH,EAAG7H,UAAWU,EAAKjE,MACzBoD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAIM,EAAKqL,KACfhL,QAAS3B,EAAMgN,WACXvM,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAaS,KAAMG,EAAKmL,OACvBnL,EAAKoL,QAuClB,OACIjM,EAAAC,EAAAC,cAAA,WAlCAX,EAAMjD,KAAKS,MACPgP,EAAMnN,IAAI,SAACiC,EAAKmH,GACZ,OAAGzI,EAAMjD,KAAKS,MAAM+H,OAEZjE,EAAKwL,QAYE,KAXJ9M,EAAMjD,KAAKS,MAAMsL,aAAexH,EAAKuL,MAE7BE,EAAQzL,EAAKmH,GAIb,KAWPnH,EAAKsL,WAEZ,KADGG,EAAQzL,EAAKmH,KAI5B,QCjEMwE,GAhBH,SAACjN,GACT,OACGS,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,CACKyM,QAASnN,EAAMmN,QACfH,UAAWhN,EAAMgN,UACjBI,SAAU,CACNC,WAAW,OACXjD,MAAM,MACNkD,SAAS,SAGd7M,EAAAC,EAAAC,cAAC4M,GAAD,CAAcP,UAAWhN,EAAMgN,cCE3BnI,mBANf,SAAyB7H,GACrB,MAAM,CACFD,KAAMC,EAAMD,OAIL8H,CAdO,SAAC7E,EAADmF,GAAmBA,EAAVpI,KAC3B,OACI0D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVZ,EAAMjD,KAAKS,MAAQwC,EAAMjD,KAAKS,MAAMwH,MAAQ,QCwC1CwI,eArCX,SAAAA,EAAYxN,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAyL,IACd3L,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAkQ,GAAAtL,KAAAH,KAAM/B,KAMVgN,UAAY,WACRnL,EAAKQ,SAAS,CAAC8K,SAAQ,KANvBtL,EAAK7E,MAAQ,CACTmQ,SAAQ,GAHEtL,wEAWV,IAAAoE,EAAAlE,KACJ,OACItB,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAC8M,GAAD,CACAN,QAASpL,KAAK/E,MAAMmQ,QACpBH,UAAW,kBAAM/G,EAAK+G,eACtBvM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACAS,KAAK,OACLQ,QAAS,kBAAMsE,EAAK5D,SAAS,CAAC8K,SAAQ,KACtC/L,MAAO,CACHsM,MAAM,YACNC,QAAQ,MACRC,OAAO,cAGXnN,EAAAC,EAAAC,cAACkN,GAAD,MACApN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,IAAIJ,UAAU,QAAvB,uBA9BCqD,aCMN6J,GATA,SAAC9N,GACd,OACES,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiL,GAAD,MACD5L,EAAM0L,WCHEqC,GAAA,SAASC,EAAeC,GAAO,IACpCC,EADoC,SAAAC,GAGtC,SAAAD,EAAYlO,GAAM,IAAA6B,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAmM,IACdrM,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAA4Q,GAAAhM,KAAAH,KAAM/B,KAEDhD,MAAQ,CACToR,SAAS,GAJCvM,EAHoB,OAAAvE,OAAA+Q,EAAA,EAAA/Q,CAAA4Q,EAAAC,GAAA7Q,OAAAgR,EAAA,EAAAhR,CAAA4Q,EAAA,EAAA3M,IAAA,qBAAA8C,MAAA,WAYlCtC,KAAK/B,MAAMsE,StBAZ,CACHjH,KAAK,YACLI,QALYgB,IAAMC,IAAI,aACbC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,WsBVG,CAAA0C,IAAA,4BAAA8C,MAAA,SAeZiB,GACtBvD,KAAKM,SAAS,CAAC+L,SAAQ,IAEnB9I,EAAUvI,KAAKS,MAAM+H,QAMP,IAAX0I,GACClM,KAAK/B,MAAME,QAAQC,KAAK,KANzB8N,GACClM,KAAK/B,MAAME,QAAQC,KAAK,YApBE,CAAAoB,IAAA,SAAA8C,MAAA,WA+BlC,OAAGtC,KAAK/E,MAAMoR,QAEN3N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,cAIJH,EAAAC,EAAAC,cAACqN,EAAD1Q,OAAAqH,OAAA,GAAmB5C,KAAK/B,MAAxB,CAA+BjD,KAAMgF,KAAK/B,MAAMjD,YArClBmR,EAAA,CACRjK,aA8ClC,OAAOY,YALP,SAA0B7H,GACtB,MAAO,CACHD,KAAMC,EAAMD,OAGb8H,CAAyBqJ,ICKrBK,GAhCA,WACX,OACI9N,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,IAAIC,OAAK,EAACC,UAAWC,GAAK1K,GAAe,KACrDzD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,SAASC,OAAK,EAACC,UAAWC,GAAK9J,GAAgB,KAC3DrE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,UAAUC,OAAK,EAACC,UAAWC,GAAKlJ,GAAQ,KACpDjF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,iBAAiBC,OAAK,EAACC,UAAWC,GAAK/F,GAAU,KAC7DpI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,eAAeC,OAAK,EAACC,UAAWC,GAAK/I,GAAqB,KACtEpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,eAAeC,OAAK,EAACC,UAAWC,GAAK/C,IAAkB,KACnEpL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,kBAAkBC,OAAK,EAACC,UAAWC,GAAKjH,GAAyB,KAC7ElH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,sBAAsBC,OAAK,EAACC,UAAWC,GAAKtG,GAAwB,KAChF7H,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,oBAAoBC,OAAK,EAACC,UAAWC,GAAKtF,IAAuB,KAC7E7I,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO0N,KAAK,oBAAoBC,OAAK,EAACC,UAAWC,GAAKrC,IAAkB,QC3BlFsC,GAA4BC,YAAgBC,IAAkBC,IAAlCF,CAA8CG,KAEhFC,IAASC,OACL1O,EAAAC,EAAAC,cAACyO,EAAA,EAAD,CAAUC,MAAOR,GAA0BS,IACvC7O,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAAC4O,GAAD,QAGPC,SAASC,eAAe","file":"static/js/main.b573ef30.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport user from './user_reducer.js';\r\nimport societes from './societes_reducer.js';\r\nimport formulaires from './formulaires_reducer.js';\r\n\r\nconst rootReducers = combineReducers({\r\n    user,\r\n    societes,\r\n    formulaires\r\n})\r\n\r\nexport default rootReducers;","export default function(state={},action){\r\n    switch(action.type){\r\n        case 'USER_LOGIN':\r\n            return {...state,login:action.payload}\r\n        case 'USER_AUTH':\r\n            return {...state,login:action.payload}\r\n        case 'GET_USER':\r\n            return {...state,users:action.payload}\r\n        case 'USER_REGISTER':\r\n            return {\r\n                ...state,\r\n                register:action.payload.success,\r\n                users:action.payload.users\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function(state={},action){\r\n    switch(action.type){\r\n        case 'GET_SOCIETES':\r\n            return {...state, list:action.payload};\r\n        case 'CLEAR_SOCIETES':\r\n            return {...state, list:action.payload};\r\n        case 'GET_SOCIETE':\r\n            return {...state, societe:action.payload};\r\n        case 'ADD_SOCIETE':\r\n            return {...state, newSociete:action.payload};\r\n        case 'CLEAR_NEWSOCIETE':\r\n            return {...state, newSociete:action.payload};\r\n        case 'UPDATE_SOCIETE':\r\n            return {\r\n                    ...state,\r\n                    updateSociete:action.payload.success,\r\n                    societe:action.payload.doc\r\n                    };\r\n        case 'DELETE_SOCIETE':\r\n            return {...state, deleted:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function(state={},action){\r\n    switch(action.type){\r\n        case 'GET_FORMULAIRESBYSOCIETE':\r\n            return {...state, list:action.payload}\r\n        case 'GET_FORMULAIRE':\r\n            return {...state, formulaire:action.payload}\r\n        case 'CLEAR_FORMULAIRE':\r\n            return {...state, list:action.payload};\r\n        case 'ADD_FORMULAIRE':\r\n            return {...state, newFormulaire:action.payload};\r\n        case 'CLEAR_NEWFORMULAIRE':\r\n            return {...state, newFormulaire:action.payload};\r\n        case 'UPDATE_FORMULAIRE':\r\n            return {\r\n                    ...state,\r\n                    updateFormulaire:action.payload.success,\r\n                    formulaire:action.payload.doc\r\n                    };\r\n        case 'DELETE_FORMULAIRE':\r\n            return {...state, deleted:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\n//USER\r\nexport function loginUser({email,password}){\r\n    const request = axios.post('/api/login',{email,password})\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type:'USER_LOGIN',\r\n        payload:request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get('/api/auth')\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type:'USER_AUTH',\r\n        payload:request\r\n    }\r\n\r\n}\r\n\r\nexport function getUsers(){\r\n    const request = axios.get(`/api/users`)\r\n                    .then(response => response.data);\r\n        \r\n    return {\r\n        type:'GET_USER',\r\n        payload:request\r\n    }\r\n}\r\n\r\n\r\nexport function userRegister(user,userList){\r\n    const request = axios.post(`/api/register`,user);\r\n\r\n    return (dispatch) =>{\r\n        request.then(({data})=>{\r\n            let users = data.success ? [...userList,data.user]:userList;\r\n            let response = {\r\n                success:data.success,\r\n                users\r\n            }\r\n\r\n            dispatch({\r\n                type:'USER_REGISTER',\r\n                payload:response\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n//SOCIETE\r\nexport function getSocietes(){\r\n    const request = axios.get('/api/societesByUser').then(response => response.data);\r\n    //console.log(`/api/societesByUser?id=${userId}`);\r\n\r\n    return {\r\n        type: 'GET_SOCIETES',\r\n        payload: request\r\n    }\r\n}\r\nexport function clearSocietes(){\r\n    return {\r\n        type: 'CLEAR_SOCIETES',\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function getSociete(Id){\r\n    const request = axios.get('/api/getSociete', {\r\n        params: {\r\n            id: Id\r\n        }\r\n    }).then(response => response.data);\r\n\r\n    return {\r\n        type: 'GET_SOCIETE',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addSociete(societe){\r\n    const request = axios.post('/api/societe',societe)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type:'ADD_SOCIETE',\r\n        payload:request\r\n    }\r\n}\r\nexport function clearNewSociete(){\r\n    return {\r\n        type: 'CLEAR_NEWSOCIETE',\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function updateSociete(data){\r\n    const request = axios.post(`/api/updateSociete`,data)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type:'UPDATE_SOCIETE',\r\n        payload:request\r\n    }\r\n}\r\n\r\nexport function deleteSociete(Id){\r\n    const request = axios.delete(`/api/deleteSociete`, {\r\n        params: {\r\n            id: Id\r\n        }\r\n    }).then(response => response.data);\r\n\r\n    return {\r\n        type:'DELETE_SOCIETE',\r\n        payload:request\r\n    }\r\n}\r\n\r\n//FORMULAIRE\r\nexport function getFormulairesBySociete(societeId, order){\r\n    const request = axios.get('/api/formulairesBySociete', {\r\n        params: {\r\n            id: societeId,\r\n            order: order\r\n        }\r\n    }).then(response => {\r\n        return( response.data.map(fData => {\r\n            return({\r\n                ...fData,\r\n                EBITDA: fData.CA - fData.FA - fData.CS - fData.FG - fData.AF\r\n            })\r\n        }))\r\n    });\r\n\r\n    return {\r\n        type: 'GET_FORMULAIRESBYSOCIETE',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getFormulaire(id){\r\n    const request = axios.get('/api/getFormulaire', {\r\n        params: {\r\n            id: id\r\n        }\r\n    }).then(response => {\r\n        const fData = response.data;\r\n            return({\r\n                ...fData,\r\n                EBITDA: fData.CA - fData.FA - fData.CS - fData.FG - fData.AF\r\n            })\r\n    });\r\n\r\n    return {\r\n        type: 'GET_FORMULAIRE',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearFormulaires(){\r\n    return {\r\n        type: 'CLEAR_FORMULAIRES',\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function addFormulaire(formulaire){\r\n    const request = axios.post('/api/formulaire',formulaire)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type:'ADD_FORMULAIRE',\r\n        payload:request\r\n    }\r\n}\r\nexport function clearNewFormulaire(){\r\n    return {\r\n        type: 'CLEAR_NEWFORMULAIRE',\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport function updateFormulaire(data){\r\n    const request = axios.post(`/api/updateFormulaire`,data)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type:'UPDATE_FORMULAIRE',\r\n        payload:request\r\n    }\r\n}\r\n\r\nexport function deleteFormulaire(id){\r\n    const request = axios.delete(`/api/deleteFormulaire?id=${id}`)\r\n                    .then(response => response.data);\r\n\r\n    return {\r\n        type:'DELETE_FORMULAIRE',\r\n        payload:request\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\n\r\nexport default function FormulairesQuickView(props) {\r\n\r\n    const renderFormulaireQuick = (formulaires) => {\r\n        return(\r\n            formulaires.list ?\r\n\r\n            formulaires.list.map( (item) => {\r\n                return(\r\n                    <tr key={item._id}>\r\n                        <td className=\"Date\">{new Date(item.date).toLocaleDateString()}</td>\r\n                        <td className=\"Button\">\r\n                            <a onClick={() => handleFormulaireEdit(item._id)}>\r\n                                {isUserSocAdmin() ? 'Editer' : 'Voir'}\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            })\r\n\r\n            : null\r\n        );\r\n    }\r\n\r\n    const handleFormulaireEdit = (id) => {\r\n        //console.log(\"SHOULD EDIT FORMULAIRE: \"+id);\r\n        props.history.push(`/formulaire/${id}`)\r\n    }\r\n\r\n    const isUserSocAdmin = () => {\r\n        //console.log(this.props.user)\r\n        if(!props.societe){return false}\r\n        if(props.societe.admins.some(adm => {return adm === props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"FQV\">\r\n            <div className=\"Head\">\r\n                <div className=\"Info\">\r\n                    <div>Adresse: {(props.societe.adresse && props.societe.adresse !== '') ? props.societe.adresse : 'Non renseignée'}</div>\r\n                    <div>Personne de contact: {(props.societe.PDC && props.societe.PDC !== '') ? props.societe.PDC : 'Non renseignée'}</div>\r\n                </div>\r\n                <div className=\"Buttons\">\r\n                    <Link className=\"Btn\" to={`/societe/${props.societe._id}`}><FontAwesome name='edit'/></Link>\r\n                    <Link className=\"Btn\" to={`/societeGraph/${props.societe._id}`}><FontAwesome name='line-chart'/></Link>\r\n                </div>\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"Date\">Date</th>\r\n                        <th className=\"Button\">\r\n                            {isUserSocAdmin() ? \r\n                            <Link style={{display:'block'}} to={`/addFormulaires/${props.societe._id}`}>Nouveau formulaire</Link>\r\n                            : null}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderFormulaireQuick(props.formulaires)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n class CsvUpDown extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedFile: null,\r\n            loaded: 0,\r\n            //societeId: '5c4f28897e19e41c4c4fc80d'\r\n        }\r\n    }\r\n\r\n    handleselectedFile = (event) => {\r\n        this.setState({\r\n            selectedFile: event.target.files[0],\r\n            loaded: 0,\r\n            //societeId: '5c4f28897e19e41c4c4fc80d'\r\n        })\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = new FormData();\r\n        data.append('file', this.state.selectedFile, this.state.selectedFile.name)\r\n        data.append('societeId', this.props.societeId)\r\n\r\n        axios\r\n        .post('/api/CSVFormulaires', data, {\r\n            onUploadProgress: ProgressEvent => {\r\n            this.setState({\r\n                loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\r\n            })\r\n            },\r\n        })\r\n        .then(res => {\r\n            //console.log(res)\r\n            this.props.refreshFormulaires();\r\n        })\r\n    }\r\n\r\n    getFormulairesCsv = () => {\r\n        axios.get('/api/CSVformulairesBySociete', {\r\n            params: {\r\n                id: this.props.societeId,\r\n                order: 'asc'\r\n            }\r\n        }).then(response => {\r\n            //this.props.history.push()\r\n            console.log(response);\r\n            //this.props.history.push(response.data);\r\n            const hostURI = 'http://' + window.location.hostname;\r\n            window.open(hostURI + response.data);\r\n        });\r\n    \r\n    }\r\n\r\n    isUserSocAdmin = () => {\r\n        //console.log(this.props.user)\r\n        if(!this.props.societe){return false}\r\n        if(this.props.societe.admins.some(adm => {return adm === this.props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {this.isUserSocAdmin() ? \r\n                <div className=\"rl_container article\">\r\n                    <form onSubmit={this.submitForm}>\r\n                        <h2>Ajouter des formulaires par CSV</h2>\r\n                        <input type=\"file\" name=\"file\" onChange={this.handleselectedFile}/>\r\n                        <button type=\"submit\">Upload</button>\r\n                    </form>\r\n                    <p>{Math.round(this.state.loaded, 2)} % uploadé</p>\r\n                    <p><button onClick={this.getFormulairesCsv}>Obtenir les formulaires au format CSV</button></p>\r\n                </div>\r\n            :\r\n                null\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CsvUpDown;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getSocietes, getFormulairesBySociete } from '../actions';\r\n\r\nimport FormulairesQuickView from '../components/societeQuickView/formulairesQuickView.js';\r\nimport CsvUpDown from '../components/csvupdown/csvupdown.js';\r\n\r\n class HomeContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedSocieteId: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n    //componentWillReceiveProps(nextProps){\r\n        if(this.props.user){\r\n            this.props.dispatch(getSocietes());\r\n            //console.log(\"USERS ID: \"+this.props.user.login.id);\r\n        }\r\n        //this.props.dispatch(getSocietes(''));\r\n    }\r\n\r\n    handleSelectSociete = (event) => {\r\n        this.setState({selectedSocieteId: event.target.value});\r\n        //console.log(this.state.selectedSociete);\r\n        this.props.dispatch(getFormulairesBySociete(event.target.value, 'desc'));\r\n    }\r\n\r\n    renderSocietes = (societes) => {\r\n        return(\r\n        societes.list && societes.list.length ?\r\n\r\n        societes.list.map( (item) => {\r\n            //return(<p key={item._id}>{item.name}</p>);\r\n            return(\r\n                <option key={item._id} value={item._id}>\r\n                    {item.name}\r\n                </option>\r\n            );\r\n        })\r\n\r\n        : null\r\n        );\r\n    }\r\n\r\n    getSelectedSociete = () => {\r\n        return(\r\n            this.props.societes.list ?\r\n    \r\n            this.props.societes.list.filter( (item) => {\r\n                return item._id === this.state.selectedSocieteId;\r\n            })[0]\r\n    \r\n            : null);\r\n    }\r\n\r\n    refreshFormulaires = () => {\r\n        this.props.dispatch(getFormulairesBySociete(this.state.selectedSocieteId, 'desc'));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PageContent\">\r\n                <form>\r\n                    <div className=\"SS\">\r\n                    <label htmlFor=\"societeSelect\">Choisissez la société</label>\r\n                    <select id='societeSelect' value={this.state.selectedSocieteId} onChange={this.handleSelectSociete}>\r\n                        <option value='' />\r\n                        {this.renderSocietes(this.props.societes)}\r\n                    </select>\r\n                    </div>\r\n                </form>\r\n                { \r\n                    this.state.selectedSocieteId !== '' ?\r\n                        <FormulairesQuickView formulaires={this.props.formulaires} societe={this.getSelectedSociete()} {...this.props}/>\r\n                    :\r\n                        null\r\n                }\r\n                { \r\n                    this.state.selectedSocieteId !== '' ?\r\n                        <CsvUpDown societeId={this.state.selectedSocieteId} societe={this.getSelectedSociete()} refreshFormulaires={this.refreshFormulaires} {...this.props} />\r\n                    :\r\n                        null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        societes: state.societes,\r\n        formulaires: state.formulaires\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomeContainer);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loginUser } from '../actions';\r\n\r\nclass LoginContainer extends Component {\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n            error:'',\r\n            success:false\r\n        }\r\n    }\r\n\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user.login.isAuth){\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n\r\n    submitForm = (e) =>{\r\n        e.preventDefault();\r\n        this.props.dispatch(loginUser(this.state))\r\n    }\r\n\r\n    render() {\r\n        let user = this.props.user;\r\n        return (\r\n            <div className=\"rl_container\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <h2>Log in here</h2>\r\n\r\n                    <div className=\"form_element\">\r\n                        <input \r\n                            type=\"email\"\r\n                            placeholder=\"Enter your mail\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputEmail}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_element\">\r\n                        <input \r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputPassword}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Log in</button>\r\n\r\n                    <div className=\"error\">\r\n                    {\r\n                        user.login ? \r\n                            <div>{user.login.message}</div>\r\n                        :null\r\n                    }\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        user:state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginContainer)","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Logout = (props) => {\r\n\r\n    let request = axios.get('/api/logout')\r\n    .then(request => {\r\n        setTimeout(()=>{\r\n            props.history.push('/');\r\n        }, 1000);\r\n    });\r\n\r\n    return (\r\n        <div className=\"logout_container\">\r\n            <h1>Déconnexion en cours</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addSociete } from '../actions';\r\n\r\n class AddSocieteContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n            formData:{\r\n                name:'',\r\n                adresse:'',\r\n                PDC:''\r\n                //ADMINS ET USERS\r\n            }\r\n        }\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(addSociete({\r\n            ...this.state.formData,\r\n            admins:[this.props.user.login.id]\r\n        }));\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = (event, name) => {\r\n        const newFormData = {\r\n            ...this.state.formData\r\n        }\r\n        newFormData[name] = event.target.value;\r\n\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rl_container article\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <h2>Nouvelle société</h2>\r\n\r\n                    <div className=\"form_element\">\r\n                        <input type=\"text\"\r\n                        placeholder=\"Nom\"\r\n                        value={this.state.formData.name}\r\n                        onChange={(event) => this.handleChange(event, 'name')}/>\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <input type=\"text\"\r\n                        placeholder=\"Adresse\"\r\n                        value={this.state.formData.adresse}\r\n                        onChange={(event) => this.handleChange(event, 'adresse')}/>\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <input type=\"text\"\r\n                        placeholder=\"Personne de contact\"\r\n                        value={this.state.formData.PDC}\r\n                        onChange={(event) => this.handleChange(event, 'PDC')}/>\r\n                    </div>\r\n                    <button type=\"submit\">Enregistrer</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        societe: state.societes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddSocieteContainer);","import React, { Component } from 'react'\r\n\r\nclass EditFormulaire extends Component {\r\n\r\n    convertDateToHtml = (inDate) => {\r\n        let date = new Date(inDate);\r\n        //(\"0\" + (this.getMonth() + 1)).slice(-2)\r\n        let tmpMonth = ('0' + (date.getMonth()+1)).slice(-2);\r\n        let tmpDay = ('0' + (date.getDate())).slice(-2);\r\n        let htmlDate = date.getFullYear()+'-'+tmpMonth+'-'+tmpDay;\r\n\r\n        //console.log('DATE IS: '+ htmlDate + \" FROM: \" + inDate)\r\n\r\n        return htmlDate;\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        props.formulaire ?\r\n            this.state = {\r\n                //formdata:{\r\n                    _id:props.formulaire._id,\r\n                    societeId:props.formulaire.societeId,\r\n                    date:this.convertDateToHtml(props.formulaire.date),\r\n                    CA:props.formulaire.CA,\r\n                    FA:props.formulaire.FA,\r\n                    CS:props.formulaire.CS,\r\n                    FG:props.formulaire.FG,\r\n                    AF:props.formulaire.AF,\r\n                    EBITDA:props.formulaire.EBITDA,\r\n                    CCT:props.formulaire.CCT,\r\n                    CLT:props.formulaire.CLT,\r\n                    CF:props.formulaire.CF,\r\n                    Inv:props.formulaire.Inv\r\n                //}\r\n            }\r\n            \r\n        :\r\n            this.state = {\r\n                //formdata:{\r\n                    _id:'',\r\n                    societeId:this.props.societeId,\r\n                    date:'',\r\n                    CA:'',\r\n                    FA:'',\r\n                    CS:'',\r\n                    FG:'',\r\n                    AF:'',\r\n                    EBITDA:'',\r\n                    CCT:'',\r\n                    CLT:'',\r\n                    CF:'',\r\n                    Inv:''\r\n                //}\r\n            }\r\n\r\n        //console.log(this.state.date)\r\n    }\r\n\r\n    //METTRE A JOUR LE STATE\r\n    handleNumInput = (event,name) => {\r\n        /*let numValue = event.target.value !== \"\" ? parseInt(event.target.value) : \"\"\r\n        this.setState({[name]:numValue});\r\n        let tmpEBITDA = (\r\n            this.state['CA'] - \r\n            this.state['FA'] - \r\n            this.state['CS'] - \r\n            this.state['FG'] - \r\n            this.state['AF']\r\n        );\r\n        this.setState({EBITDA: tmpEBITDA});*/\r\n        let numValue = event.target.value !== \"\" ? parseInt(event.target.value) : \"\"\r\n        let tmpState = this.state;\r\n        tmpState[name] = numValue;\r\n        tmpState['EBITDA'] = (\r\n            tmpState['CA'] - \r\n            tmpState['FA'] - \r\n            tmpState['CS'] - \r\n            tmpState['FG'] - \r\n            tmpState['AF']\r\n        );\r\n        this.setState(tmpState);\r\n    }\r\n    handleDateInput = (event,name) => {\r\n        this.setState({[name]:event.target.value});\r\n        console.log('NEW DATE IS: '+event.target.value)\r\n        //console.log(this.state.date)\r\n    }\r\n\r\n    //DEMANDER AU COMPONENT PARENT D'UPDATEFORMULAIRE\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        //this.props.dispatch(updateBook(this.state.formdata))\r\n\r\n        let reqFormulaire = {...this.state};\r\n        reqFormulaire.date = new Date(reqFormulaire.date).toJSON();\r\n\r\n        for(let elem in reqFormulaire)\r\n        {\r\n            if(reqFormulaire[elem] === \"\"){\r\n                delete reqFormulaire[elem];\r\n            } \r\n        }\r\n\r\n        this.props.saveFormulaire(reqFormulaire);\r\n        //console.log(this.state.formdata);\r\n    }\r\n\r\n    render() {\r\n        //console.log('STATE DATE: '+this.state.date);\r\n        //console.log(this.props)\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.submitForm}>\r\n                    <h2>Edition du formulaire</h2>\r\n                    \r\n                    <div className=\"form_element\">\r\n                        <label>Date : </label>\r\n                        <input\r\n                            id=\"dateIn\"\r\n                            type=\"date\"\r\n                            value={this.state.date}\r\n                            onChange={(event)=>this.handleDateInput(event,'date')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_element\">\r\n                        <label>Chiffre d'affaire : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Chiffre d'affaire\"\r\n                            value={this.state.CA}\r\n                            onChange={(event)=>this.handleNumInput(event,'CA')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Frais d'achats : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Frais d'achats\"\r\n                            value={this.state.FA}\r\n                            onChange={(event)=>this.handleNumInput(event,'FA')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Charges salariales : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Charges salariales\"\r\n                            value={this.state.CS}\r\n                            onChange={(event)=>this.handleNumInput(event,'CS')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Frais généraux : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Frais généraux\"\r\n                            value={this.state.FG}\r\n                            onChange={(event)=>this.handleNumInput(event,'FG')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Autres frais : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Autres frais\"\r\n                            value={this.state.AF}\r\n                            onChange={(event)=>this.handleNumInput(event,'AF')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>EBITDA : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"EBITDA\"\r\n                            value={this.state.EBITDA}\r\n                            onChange={(event)=>this.handleNumInput(event,'EBITDA')}\r\n                            disabled={this.props.disabled}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Crédits à court termes : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Crédits court termes\"\r\n                            value={this.state.CCT}\r\n                            onChange={(event)=>this.handleNumInput(event,'CCT')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Crédits à long termes : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Crédits long termes\"\r\n                            value={this.state.CLT}\r\n                            onChange={(event)=>this.handleNumInput(event,'CLT')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Cashflow : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Cashflow\"\r\n                            value={this.state.CF}\r\n                            onChange={(event)=>this.handleNumInput(event,'CF')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_element\">\r\n                        <label>Investissements : </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Investissements\"\r\n                            value={this.state.Inv}\r\n                            onChange={(event)=>this.handleNumInput(event,'Inv')}\r\n                            disabled={this.props.disabled}\r\n                        />\r\n                    </div>\r\n\r\n                    {this.props.disabled !== 'disabled' ? \r\n                    <div className=\"Btn\">\r\n                        <a onClick={this.submitForm}>Enregistrer</a> \r\n                    </div>\r\n                    : null}\r\n                    {this.props.disabled !== 'disabled' ? \r\n                    <div className=\"Btn\">\r\n                            <a onClick={this.props.deleteFormulaire}>Supprimer le formulaire</a>\r\n                    </div>\r\n                    : null}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  EditFormulaire","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getFormulaire, getSociete, addFormulaire, updateFormulaire, deleteFormulaire } from '../actions';\r\n\r\nimport EditFormulaire from '../components/formulaires/editFormulaire.js';\r\n\r\n class EditFormulaireContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch(getFormulaire(this.props.match.params.id)).then((res) => {\r\n            //console.log(res);\r\n            this.props.dispatch(getSociete(res.payload.societeId))\r\n        });\r\n        \r\n    }\r\n\r\n    //FONCTION UPDATEFORMULAIRE(FORMULAIRE)\r\n    sendUpdateFormulaire = (formulaire) => {\r\n        formulaire._id ?\r\n            this.props.dispatch(updateFormulaire(formulaire))\r\n        :\r\n            this.props.dispatch(addFormulaire(formulaire));\r\n\r\n        //console.log(formulaire);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    deleteFormulaire = () => {\r\n        if(window.confirm(\"Le formulaire va être supprimé. \\nÊtes-vous sûr de votre choix? (ce changement est définitif)\")){\r\n            //console.log(this.props.formulaire)\r\n            /*\r\n            this.props.dispatch(deleteSociete(this.props.formulaire._id))\r\n            redirect\r\n            */\r\n           this.props.dispatch(deleteFormulaire(this.props.formulaire._id));\r\n           this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isUserSocAdmin = () => {\r\n        if(!this.props.societe){return false}\r\n        if(this.props.societe.admins.some(adm => {return adm === this.props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    renderFormulaire(){\r\n        return(\r\n            this.props.formulaire ?\r\n\r\n                <EditFormulaire key={this.props.formulaire._id}\r\n                societeId={this.props.formulaire.societeId} \r\n                saveFormulaire={this.sendUpdateFormulaire}\r\n                deleteFormulaire={this.deleteFormulaire}\r\n                formulaire={this.props.formulaire}\r\n                disabled={(this.isUserSocAdmin() ? '' : \"disabled\")}/>\r\n\r\n            : null\r\n        );\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props)\r\n        return (\r\n            <div className=\"PageContent\">\r\n                <div className=\"EditFormContainer\">\r\n                    {this.renderFormulaire()}\r\n                    {/*this.isUserSocAdmin() ? \r\n                    <div className=\"Btn\">\r\n                        <a onClick={this.sendUpdateFormulaire}>Enregistrer</a> \r\n                    </div>\r\n                    : null}\r\n                    {this.isUserSocAdmin() ? \r\n                    <div className=\"Btn\">\r\n                            <a onClick={this.deleteFormulaire}>Supprimer le formulaire</a>\r\n                    </div>\r\n                    : null*/}\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        formulaire: state.formulaires.formulaire,\r\n        societe: state.societes.societe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditFormulaireContainer);","import React, { Component } from 'react'\r\n\r\nconst AddFormulaire = (props) => {\r\n\r\n    const convertDateToHtml = (inDate) => {\r\n        let date = new Date(inDate);\r\n        let tmpMonth = ('0' + (date.getMonth()+1)).slice(-2);\r\n        let tmpDay = date.getDate();\r\n        let htmlDate = date.getFullYear()+'-'+tmpMonth+'-'+tmpDay;\r\n        return htmlDate;\r\n    }\r\n\r\n    //METTRE A JOUR LE STATE\r\n    const handleNumInput = (event,name) => {\r\n        props.handleNum(props.formId, event.target.value, name)\r\n    }\r\n    const handleDateInput = (event,name) => {\r\n        props.handleDate(props.formId, event.target.value, name)\r\n    }\r\n\r\n    //DEMANDER AU COMPONENT PARENT D'UPDATEFORMULAIRE\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddFormContainer\">\r\n        <form onSubmit={submitForm}>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        id=\"dateIn\"\r\n                        type=\"date\"\r\n                        value={props.date}\r\n                        onChange={(event)=>handleDateInput(event,'date')}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Chiffre d'affaire\"\r\n                        value={props.CA}\r\n                        onChange={(event)=>handleNumInput(event,'CA')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Frais d'achats\"\r\n                        value={props.FA}\r\n                        onChange={(event)=>handleNumInput(event,'FA')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Charges salariales\"\r\n                        value={props.CS}\r\n                        onChange={(event)=>handleNumInput(event,'CS')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Frais généraux\"\r\n                        value={props.FG}\r\n                        onChange={(event)=>handleNumInput(event,'FG')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Autres frais\"\r\n                        value={props.AF}\r\n                        onChange={(event)=>handleNumInput(event,'AF')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"EBITDA\"\r\n                        value={props.EBITDA}\r\n                        onChange={(event)=>handleNumInput(event,'EBITDA')}\r\n                        disabled\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Crédits court termes\"\r\n                        value={props.CCT}\r\n                        onChange={(event)=>handleNumInput(event,'CCT')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Crédits long termes\"\r\n                        value={props.CLT}\r\n                        onChange={(event)=>handleNumInput(event,'CLT')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Cashflow\"\r\n                        value={props.CF}\r\n                        onChange={(event)=>handleNumInput(event,'CF')}\r\n                    />\r\n                </div>\r\n                <div className=\"form_element\">\r\n                    \r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Investissements\"\r\n                        value={props.Inv}\r\n                        onChange={(event)=>handleNumInput(event,'Inv')}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  AddFormulaire","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addFormulaire, getSociete } from '../actions';\r\n\r\nimport AddFormulaire from '../components/formulaires/addFormulaire.js';\r\n\r\n class AddFormulaireContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            formulaires: [\r\n                {\r\n                    societeId:this.props.match.params.id,\r\n                    date:'',\r\n                    CA:'',\r\n                    FA:'',\r\n                    CS:'',\r\n                    FG:'',\r\n                    AF:'',\r\n                    EBITDA:'',\r\n                    CCT:'',\r\n                    CLT:'',\r\n                    CF:'',\r\n                    Inv:''\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleNumInput = (form,value,name) => {\r\n        let numValue = value !== \"\" ? parseInt(value) : \"\";\r\n        let tmpState = this.state;\r\n        tmpState.formulaires[form][name] = numValue;\r\n        tmpState.formulaires[form]['EBITDA'] = (\r\n            tmpState.formulaires[form]['CA'] - \r\n            tmpState.formulaires[form]['FA'] - \r\n            tmpState.formulaires[form]['CS'] - \r\n            tmpState.formulaires[form]['FG'] - \r\n            tmpState.formulaires[form]['AF']\r\n        );\r\n        this.setState(tmpState);\r\n        \r\n    }\r\n    handleDateInput = (form,value,name) => {\r\n\r\n        //console.log('NEW DATE IS: '+value)\r\n        //this.setState({[name]:value});\r\n        let tmpState = this.state;\r\n        tmpState.formulaires[form][name] = value;\r\n        this.setState(tmpState);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch(getSociete(this.props.match.params.id));\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        //console.log(nextProps);\r\n    }\r\n    componentDidUpdate(){\r\n        //console.log(this.props);\r\n        if(this.props.societe && !this.isUserSocAdmin()){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    convertDateToHtml = (inDate) => {\r\n        let date = new Date(inDate);\r\n        let tmpMonth = ('0' + (date.getMonth()+1)).slice(-2);\r\n        let tmpDay = date.getDate();\r\n        let htmlDate = date.getFullYear()+'-'+tmpMonth+'-'+tmpDay;\r\n        return htmlDate;\r\n    }\r\n\r\n    sendUpdateFormulaire = (formulaire) => {\r\n        let reqFormulaire = formulaire;\r\n        reqFormulaire.date = new Date(reqFormulaire.date).toJSON();\r\n\r\n        for(let elem in reqFormulaire)\r\n        {\r\n            if(reqFormulaire[elem] === \"\"){\r\n                delete reqFormulaire[elem];\r\n            } \r\n        }\r\n\r\n        this.props.dispatch(addFormulaire(reqFormulaire));\r\n        //Indiquer si il y a une erreur ou non, enlever les formulaires correctement ajoutés\r\n    }\r\n\r\n    SaveAllChanges = () => {\r\n        //console.log(this.state);\r\n\r\n        for(let i in this.state.formulaires)\r\n        {\r\n            //console.log('FORMULAIRE DATA TO ADD: '+ this.state.formulaires[i]);\r\n            this.sendUpdateFormulaire(this.state.formulaires[i]);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    AddFormulaire = () => {\r\n        const defaultFormulaire = {\r\n            societeId:this.props.match.params.id,\r\n            date:'',\r\n            CA:'',\r\n            FA:'',\r\n            CS:'',\r\n            FG:'',\r\n            AF:'',\r\n            EBITDA:'',\r\n            CCT:'',\r\n            CLT:'',\r\n            CF:'',\r\n            Inv:''\r\n        }\r\n\r\n        //this.setState({...this.state, defaultFormulaire})\r\n        let tmpState = this.state;\r\n        tmpState.formulaires.push(defaultFormulaire);// = {...tmpState.formulaires, defaultFormulaire};\r\n\r\n        this.setState(tmpState);\r\n\r\n        //console.log(this.state);\r\n    }\r\n\r\n    isUserSocAdmin = () => {\r\n        if(!this.props.societe){return false}\r\n        if(this.props.societe.admins.some(adm => {return adm === this.props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    renderFormulaires(){\r\n        return(\r\n            this.state.formulaires.map((item, i) => {\r\n                return(\r\n                    <AddFormulaire key={i} formId={i} {...item} handleNum={this.handleNumInput} handleDate={this.handleDateInput}/>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(this.isUserSocAdmin()){\r\n        return (\r\n            <div className=\"AddFormPageContent\">\r\n                <h2>Ajout de formulaires</h2>\r\n                {this.renderFormulaires()}\r\n                <div className=\"Btn\">\r\n                    <a onClick={this.SaveAllChanges}>Enregistrer</a>\r\n                    <a onClick={this.AddFormulaire}>Ajouter un formulaire</a>    \r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n        else{return null}\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        societe: state.societes.societe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddFormulaireContainer);","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, userRegister } from '../actions';\r\n\r\nclass Register extends PureComponent {\r\n\r\n    state ={\r\n        email:'',\r\n        password:'',\r\n        privileges:0,\r\n        error:''\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch(getUsers())\r\n    }\r\n\r\n\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    } \r\n    handleInputPassword= (event) => {\r\n        this.setState({password:event.target.value})\r\n    } \r\n    handleInputPrivileges = (event) => {\r\n        let numValue = event.target.value === \"1\" ? 1 : 0;\r\n        this.setState({privileges:numValue})\r\n    } \r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user.register === false){\r\n            this.setState({error:'Error,try again'})\r\n        } else{\r\n            this.setState({\r\n                email:'',\r\n                password:'',\r\n                privileges:0\r\n            })\r\n        }\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({error:''});\r\n\r\n        this.props.dispatch(userRegister({\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            privileges:this.state.privileges\r\n        },this.props.user.users))\r\n        \r\n    }\r\n\r\n    showUsers = (user) =>(\r\n        user.users ? \r\n            user.users.map(item => (\r\n                <tr key={item._id}>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.privileges ? 'administrateur' : 'utilisateur'}</td>\r\n                </tr>\r\n            ))\r\n        :null\r\n    )\r\n\r\n\r\n    render() {\r\n        let user = this.props.user;\r\n        return (\r\n            <div className=\"rl_container\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <h2>Ajouter un utilisateur</h2>\r\n                    \r\n                    <div className=\"form_element\">\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputEmail}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form_element\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Mot de passe\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputPassword}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form_element\">\r\n                        <select\r\n                            value={this.state.privileges}\r\n                            onChange={this.handleInputPrivileges}\r\n                        >\r\n                            <option value=\"0\">utilisateur</option>\r\n                            <option value=\"1\">administrateur</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Enregistrer</button>\r\n                    <div className=\"error\">\r\n                        {this.state.error}\r\n                    </div>\r\n\r\n                </form>\r\n                <div className=\"current_users\">\r\n                    <h4>Utilisateurs existants:</h4>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <th>Privileges</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.showUsers(user)}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user:state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\r\n\r\nimport { getFormulairesBySociete } from '../actions';\r\n\r\n//import CustomDateTick from '../components/customDateTick.js';\r\n\r\n class SocieteGraphContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            toShow: {\r\n                CA: true,\r\n                FA: true,\r\n                CS: true,\r\n                FG: true,\r\n                AF: true,\r\n                EBITDA: true,\r\n                CCT: true,\r\n                CLT: true,\r\n                CF: true,\r\n                Inv: true\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        //this.props.dispatch(getFormulairesBySociete(this.props.match.params.societeId));\r\n        //console.log(\"Searching for formulaire: \"+this.props.match.params.id);\r\n        this.props.dispatch(getFormulairesBySociete(this.props.match.params.id)).then(() => {\r\n            //console.log(\"Formulaires obtenus pour la société: \"+ this.props.match.params.id);\r\n        });\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        //console.log('next props: ' + JSON.stringify(nextProps));\r\n\r\n        let tmpData = nextProps.formulaires;\r\n        //console.log('new data: ' + JSON.stringify(tmpData));\r\n\r\n        for(let elem in tmpData)\r\n        {\r\n            tmpData[elem].date = new Date(tmpData[elem].date).toLocaleDateString();\r\n        }\r\n\r\n        this.setState({...this.state, data:tmpData});\r\n    }\r\n\r\n    handleFieldSelect(e){\r\n        /*this.setState({\r\n            toShow: {\r\n                CA: true,\r\n                FA: true,\r\n                CS: true,\r\n                FG: true,\r\n                AF: true,\r\n                EBITDA: false,\r\n                CCT: false,\r\n                CLT: false,\r\n                CF: false,\r\n                Inv: false\r\n            }\r\n        })*/\r\n\r\n        /*for(elem in this.state.toShow){\r\n\r\n        }*/\r\n\r\n        let tmpState = this.state;\r\n\r\n        tmpState.toShow[e.target.name] = e.target.checked;\r\n\r\n        //console.log(tmpState);\r\n\r\n        this.setState(tmpState);\r\n    }\r\n\r\n    renderFieldSelect(){\r\n\r\n        let formFields = Object.keys(this.state.toShow).map(elem => {\r\n            return(\r\n                <div className=\"CheckboxesGraphElem\" key={elem}>\r\n                    <label>{elem} : </label>\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    name={elem}\r\n                    checked={this.state.toShow[elem]}\r\n                    onChange={(e) => this.handleFieldSelect(e)}\r\n                    />\r\n                </div>\r\n            );\r\n        })\r\n\r\n        return(\r\n            <div className=\"CheckboxesGraph\">\r\n                {formFields}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderGraph(){\r\n\r\n        const linesColor = {\r\n            CA: '#800000',\r\n            FA: '#000075',\r\n            CS: '#f032e6',\r\n            FG: '#3cb44b',\r\n            AF: '#ffe119',\r\n            EBITDA: '#42d4f4',\r\n            CCT: '#f58231',\r\n            CLT: '#0000ff',\r\n            CF: '#000000',\r\n            Inv: '#ff0000'\r\n        }\r\n\r\n        const renderLines = Object.keys(this.state.toShow).map((elem, i) => {\r\n            return(\r\n                this.state.toShow[elem] ? \r\n                    <Line key={i} type=\"monotone\" dataKey={elem} stroke={linesColor[elem]} />\r\n                :\r\n                    null\r\n            );\r\n        })\r\n\r\n        return(\r\n            this.props.formulaires ?\r\n                <div className=\"FormGraph\">\r\n                    <ResponsiveContainer width=\"100%\" aspect={2.2}>\r\n                        <LineChart width={600} height={300} data={this.state.data}\r\n                        margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                            <XAxis dataKey=\"date\" />\r\n                            <YAxis/>\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Tooltip/>\r\n                            <Legend />\r\n                            {renderLines}\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            : null\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"GraphContainer\">\r\n                {this.renderFieldSelect()}\r\n                {this.renderGraph()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        formulaires: state.formulaires.list\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SocieteGraphContainer);","import React, { Component } from 'react'\r\n\r\nclass UserSelector extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n    \r\n        //console.log(\"SHOULD RETURN A VALID USER ID\");\r\n        //props.dispatch(getUsers())\r\n\r\n        //CHECK SI L'UTILISATEUR EXISTE, SI OUI, L'AJOUTER A LA LISTE (ID)\r\n\r\n        //AJOUTER CHECK SI L'UTILISATEUR EST DEJA DANS LA LISTE\r\n        /*if(this.props.user.users.some(usr => {\r\n            return usr.email === this.state.formCurAdmin;\r\n        })){\r\n            let tmpState = this.state;\r\n\r\n            tmpState.societe.users.concat(this.props.user.users.filter(usr => {\r\n                return usr.email === this.state.formCurAdmin\r\n            }));\r\n            this.setState(tmpState);\r\n            console.log(\"TMPSTATE: \");\r\n            console.log(tmpState);\r\n        }*/\r\n\r\n        let tmpUsers = this.props.users.filter(usr => {\r\n            return usr.email === this.state.email\r\n        })\r\n\r\n        //console.log(tmpUsers);\r\n\r\n        this.props.returnUser(tmpUsers[0]);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"form_element\">\r\n                    <label>{this.props.children}</label>\r\n                    <input\r\n                        id=\"AddUser\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <div className=\"Btn\">\r\n                            <a onClick={this.submitForm}>+</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserSelector;","import React from 'react'\r\n\r\nconst UserList = (props) => {\r\n\r\n    const showUsers = (users) =>{\r\n        //console.log(users[0]);\r\n        return(\r\n        users.length > 0 ? \r\n            users.map(item => (\r\n                <tr key={item._id}>\r\n                    <td>{item.email}</td>\r\n                </tr>\r\n            ))\r\n        :null\r\n        );\r\n    }\r\n\r\n    return (\r\n    <div className=\"current_users\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>{props.header}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.users ? showUsers(props.users) : null}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default UserList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getSociete, updateSociete, deleteSociete, getUsers } from '../actions';\r\n\r\nimport UserSelector from '../components/userSelector/userSelector.js';\r\nimport UserList from '../components/userSelector/userList.js';\r\n\r\n class SocieteContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            societe: {\r\n                id: '',\r\n                name: '',\r\n                adresse: '',\r\n                PDC: '',\r\n                admins:[],\r\n                users:[]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch(getSociete(this.props.match.params.id)).then(() => {\r\n            //console.log(\"DISPATCH ENDED SOCIETE: \");\r\n            //console.log(this.props.societe);\r\n        })\r\n\r\n        this.props.dispatch(getUsers());\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        //console.log(nextProps);\r\n        this.setState({societe:nextProps.societe});\r\n    }\r\n\r\n    handleInput = (event,name) => {\r\n        /*let value = event.target.value;\r\n        this.setState({[name]:value});*/\r\n\r\n        let tmpState = this.state;\r\n        tmpState.societe[name] = event.target.value;\r\n        this.setState(tmpState);\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(updateSociete(this.state.societe))\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    addSocAdmin = (user) => {\r\n        //console.log(\"Try to add admin : \" + JSON.stringify(user));\r\n        if(!user || !this.state.societe){return null}\r\n\r\n        //SI L'UTILISATEUR EST PAS ADMIN\r\n        if(!this.state.societe.admins.some(adm => {return adm === user._id})){\r\n            let tmpState = this.state;\r\n            tmpState.societe.admins = tmpState.societe.admins.concat(user._id);\r\n\r\n            //SI L'UTILISATEUR EST USER, LE RETIRER\r\n            //if(this.state.societe.admins.some(usr => {return usr === user._id})){\r\n                tmpState.societe.users = tmpState.societe.users.filter(u => {return u !== user._id});\r\n            //}\r\n            //console.log(tmpState);\r\n            this.setState(tmpState);\r\n        }\r\n    }\r\n\r\n    addSocUser = (user) => {\r\n        //console.log(\"Try to add user : \" + JSON.stringify(user));\r\n        if(!user || !this.state.societe){return null}\r\n        \r\n        //SI L'UTILISATEUR EST NI ADMIN NI USER\r\n        if(\r\n            !(this.state.societe.users.some(usr => {return usr === user._id}))\r\n            && !(this.state.societe.admins.some(adm => {return adm === user._id}))\r\n            ){\r\n            let tmpState = this.state;\r\n            tmpState.societe.users = tmpState.societe.users.concat(user._id);\r\n            //console.log(tmpState);\r\n            this.setState(tmpState);\r\n        }\r\n    }\r\n\r\n    getUsersById = (usersId) => {\r\n        if(!this.props.user.users){return null}\r\n        if(this.props.user.users.length){\r\n            return(this.props.user.users.filter(usr => {\r\n                return(\r\n                    usersId.some(uid => uid === usr._id)\r\n                );\r\n            })\r\n            );\r\n        }\r\n        else{\r\n            return(usersId.some(uid => uid === this.props.user.users._id));\r\n        }\r\n    }\r\n\r\n    deleteSociete = () => {\r\n        if(window.confirm(\"La société et ses formulaires vont être supprimés. \\nÊtes-vous sûr de votre choix? (ce changement est définitif)\")){\r\n            //console.log(this.props.societe)\r\n            /*\r\n            this.props.dispatch(deleteSociete(this.props.societe._id))\r\n            redirect\r\n            */\r\n            this.props.dispatch(deleteSociete(this.props.societe._id));\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isUserSocAdmin = () => {\r\n        //console.log(this.props.user)\r\n        if(this.state.societe.admins.some(adm => {return adm === this.props.user.login.id})){\r\n            //console.log(\"USER IS ADMIN\")\r\n            return true;\r\n        }\r\n        else{\r\n            //console.log(\"USER IS USER\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(...(!this.isUserSocAdmin() ? 'admin' : 'disabled'))\r\n        //console.log(this.state)\r\n        if(this.state.societe.name !== ''){\r\n            return (\r\n                <div className=\"PageContent\">\r\n                    <div className=\"EditSocietePageContent\">\r\n                    <form onSubmit={this.submitForm}>\r\n                        <div className=\"form_element\">\r\n                            <label>Nom : </label>\r\n                            <input\r\n                                id=\"name\"\r\n                                value={this.state.societe.name}\r\n                                onChange={(event)=>this.handleInput(event,'name')}\r\n                                disabled={(this.isUserSocAdmin() ? '' : \"disabled\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <label>Adresse : </label>\r\n                            <input\r\n                                id=\"adresse\"\r\n                                value={this.state.societe.adresse}\r\n                                onChange={(event)=>this.handleInput(event,'adresse')}\r\n                                disabled={(this.isUserSocAdmin() ? '' : \"disabled\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <label>Personne de contact : </label>\r\n                            <input\r\n                                id=\"PDC\"\r\n                                value={this.state.societe.PDC}\r\n                                onChange={(event)=>this.handleInput(event,'PDC')}\r\n                                disabled={(this.isUserSocAdmin() ? '' : \"disabled\")}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* AJOUT D'ADMINS, AJOUT D'UTILISATEURS */}\r\n                        {this.isUserSocAdmin() ? \r\n                        <UserSelector \r\n                            users={this.props.user.users} \r\n                            returnUser={this.addSocAdmin}>Ajouter un administrateur : </UserSelector>\r\n                        : null}\r\n                        <UserList \r\n                            users={this.getUsersById(this.state.societe.admins)} \r\n                            header=\"Administrateurs\"\r\n                            disabled={(this.isUserSocAdmin() ? 'enabled' : \"disabled\")}/>\r\n                        {this.isUserSocAdmin() ? \r\n                        <UserSelector \r\n                            users={this.props.user.users} \r\n                            returnUser={this.addSocUser}>Ajouter un utilisateur : </UserSelector>\r\n                        : null}\r\n                        <UserList \r\n                            users={this.getUsersById(this.state.societe.users)} \r\n                            header=\"Utilisateurs\"\r\n                            disabled={(this.isUserSocAdmin() ? 'enabled' : \"disabled\")}/>\r\n\r\n                        {this.isUserSocAdmin() ? \r\n                        <div className=\"Btn\">\r\n                            <a onClick={this.submitForm}>Enregistrer</a>\r\n                        </div>\r\n                        : null}\r\n                        {this.isUserSocAdmin() ? \r\n                        <div className=\"Btn\">\r\n                            <a onClick={this.deleteSociete}>Supprimer la société</a>\r\n                        </div> \r\n                        : null}\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{return null}\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        //formulaires: state.formulaires\r\n        societe: state.societes.societe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SocieteContainer);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n class CsvTestContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedFile: null,\r\n            loaded: 0,\r\n            societeId: '5c4f28897e19e41c4c4fc80d'\r\n        }\r\n    }\r\n\r\n    handleselectedFile = (event) => {\r\n        this.setState({\r\n            selectedFile: event.target.files[0],\r\n            loaded: 0,\r\n            societeId: '5c4f28897e19e41c4c4fc80d'\r\n        })\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        //console.log(\"SHOULD UPLOAD CSV\");\r\n\r\n        const data = new FormData();\r\n        data.append('file', this.state.selectedFile, this.state.selectedFile.name)\r\n        data.append('societeId', this.state.societeId)\r\n\r\n        axios\r\n        .post('/api/CSVFormulaires', data, {\r\n            onUploadProgress: ProgressEvent => {\r\n            this.setState({\r\n                loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\r\n            })\r\n            },\r\n        })\r\n        .then(res => {\r\n            //console.log(res)\r\n        })\r\n    }\r\n\r\n    getFormulairesCsv = () => {\r\n        axios.get('/api/CSVformulairesBySociete', {\r\n            params: {\r\n                id: this.state.societeId,\r\n                order: 'asc'\r\n            }\r\n        }).then(response => {\r\n            //this.props.history.push()\r\n            //console.log(response);\r\n        });\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rl_container article\">\r\n                <form onSubmit={this.submitForm}>\r\n                    <h2>Uploader des sociétés par CSV</h2>\r\n                    <input type=\"file\" name=\"file\" onChange={this.handleselectedFile}/>\r\n                    <button type=\"submit\">Upload</button>\r\n                </form>\r\n                <p>{Math.round(this.state.loaded, 2)} % uploadé</p>\r\n                <p><button onClick={this.getFormulairesCsv}>Get formulaires CSV</button></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CsvTestContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport { connect } from 'react-redux';\n\nconst SidenavItems = (props, {user}) => {\n\n    const items = [\n        {\n            type:'navItem',\n            icon:'home',\n            text:'Accueil',\n            link:'/',\n            restricted:true\n        },\n        {\n            type:'navItem',\n            icon:'user-plus',\n            text:'Nouvel utilisateur (admin)',\n            link:'/user/register',\n            restricted:true,\n            admin:true\n        },\n        {\n            type:'navItem',\n            icon:'sign-in',\n            text:'Connexion',\n            link:'/login',\n            restricted:false,\n            exclude:true\n        },\n        {\n            type:'navItem',\n            icon:'sign-out',\n            text:'Déconnexion',\n            link:'/logout',\n            restricted:true\n        },\n        {\n            type:'navItem',\n            icon:'file-text-o',\n            text:'Nouvelle société',\n            link:'/societe/add',\n            restricted:true\n        }\n    ]\n\n    const element = (item,i) => (\n        <div key={i} className={item.type}>\n            <Link to={item.link}\n            onClick={props.onHideNav}>\n                <FontAwesome name={item.icon}/>\n                {item.text}\n            </Link>\n        </div>\n    )\n\n    const showItems = () => (\n        props.user.login ?\n            items.map((item,i)=>{\n                if(props.user.login.isAuth) {\n                    //console.log(props.user)\n                    if(!item.exclude){\n                        if(props.user.login.privileges || !item.admin)\n                        {\n                            return element(item,i);\n                        }\n                        else{\n                            //return element(item,i);\n                            return null;\n                        }\n                        \n                    }\n                    else{\n                        return null;\n                    }\n                    /*return !item.exclude ?\n                        element(item,i)\n                    :null*/\n                } else {\n                    return !item.restricted ?\n                        element(item,i)\n                    :null\n                }\n            })\n        :null\n        /*items.map((item,i)=>{\n            return element(item,i);\n        })*/\n    )\n\n    return (\n        <div>\n            {showItems()}\n        </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return{\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(SidenavItems)","import React from 'react';\r\nimport SideNav from 'react-simple-sidenav';\r\nimport SidenavItems from './sidenav_items'\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n       <SideNav\r\n            showNav={props.showNav}\r\n            onHideNav={props.onHideNav}\r\n            navStyle={{\r\n                background:'#222',\r\n                width:'50%',\r\n                maxWidth:'15em'\r\n            }}\r\n       >\r\n           <SidenavItems onHideNav={props.onHideNav}/>\r\n        </SideNav>\r\n    );\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ConnectedUser = (props, {user}) => {\r\n    return (\r\n        <div className=\"ConnectedUser\">\r\n            {props.user.login ? props.user.login.email : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ConnectedUser)","import React, { Component } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Nav from './sidenav/sidenav.js';\r\nimport ConnectedUser from './connectedUser.js';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            showNav:false\r\n        }\r\n    }\r\n\r\n    onHideNav = () => {\r\n        this.setState({showNav:false});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header>\r\n                <Nav \r\n                showNav={this.state.showNav}\r\n                onHideNav={() => this.onHideNav()} />\r\n                <div className=\"open_nav\">\r\n                    <FontAwesome \r\n                    name=\"bars\"\r\n                    onClick={() => this.setState({showNav:true})}\r\n                    style={{\r\n                        color:'lightGray',\r\n                        padding:'8pt',\r\n                        cursor:'pointer'\r\n                    }} />\r\n                </div>\r\n                    <ConnectedUser />\r\n                    <Link to=\"/\" className=\"logo\">\r\n                        Digitech TP\r\n                    </Link>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nimport Header from '../components/header/header.js';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div>\r\n        <Header />\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { auth } from '../actions';\r\n\r\nexport default function(ComposedClass, reload){\r\n    class AuthenticationCheck extends Component {\r\n\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state = {\r\n                loading: true\r\n            }\r\n        }\r\n\r\n        componentWillMount(){\r\n            this.props.dispatch(auth());\r\n        }\r\n\r\n        componentWillReceiveProps(nextProps){\r\n            this.setState({loading:false})\r\n\r\n            if(!nextProps.user.login.isAuth){\r\n                if(reload){\r\n                    this.props.history.push('/login');\r\n                }\r\n            } \r\n            else {\r\n                if(reload === false){\r\n                    this.props.history.push('/');\r\n                }\r\n            }\r\n        }\r\n\r\n        render(){\r\n            if(this.state.loading){\r\n                return(\r\n                    <div className=\"loader\">Chargement</div>\r\n                );\r\n            }\r\n            return(\r\n                <ComposedClass {...this.props} user={this.props.user}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    function  mapStateToProps(state) {\r\n        return {\r\n            user: state.user\r\n        };\r\n    }\r\n    return connect(mapStateToProps)(AuthenticationCheck);\r\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport HomeContainer from './containers/homeContainer.js';\nimport LoginContainer from './containers/loginContainer.js';\nimport Logout from './components/logout.js';\nimport AddSocieteContainer from './containers/addSociete.js';\nimport EditFormulaireContainer from './containers/editFormulaireContainer.js';\nimport AddFormulaireContainer from './containers/addFormulaireContainer.js';\nimport Register from './containers/register.js';\nimport SocieteGraphContainer from './containers/societeGraphContainer.js';\nimport SocieteContainer from './containers/societeContainer.js';\nimport CsvTestContainer from './containers/csvTestContainer.js';\n/*import BookView from './components/Books'\nimport Login from './containers/Admin/login'\nimport User from './components/Admin'\nimport AddReview from './containers/Admin/add'\nimport UserPosts from './components/Admin/userPosts'\nimport EditReview from './containers/Admin/edit';\nimport Register from './containers/Admin/register';\nimport Logout from './components/Admin/logout';*/\n\nimport Layout from './hoc/layout.js';\nimport Auth from './hoc/auth.js';\n\nconst Routes = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/\" exact component={Auth(HomeContainer, true)} />\n                <Route path=\"/login\" exact component={Auth(LoginContainer, false)} />\n                <Route path=\"/logout\" exact component={Auth(Logout, true)} />\n                <Route path=\"/user/register\" exact component={Auth(Register, true)} />\n                <Route path=\"/societe/add\" exact component={Auth(AddSocieteContainer, true)} />\n                <Route path=\"/societe/:id\" exact component={Auth(SocieteContainer, true)} />\n                <Route path=\"/formulaire/:id\" exact component={Auth(EditFormulaireContainer, true)} />\n                <Route path=\"/addFormulaires/:id\" exact component={Auth(AddFormulaireContainer, true)} />\n                <Route path=\"/societeGraph/:id\" exact component={Auth(SocieteGraphContainer, true)} />\n                <Route path=\"/uploadCsvSociete\" exact component={Auth(CsvTestContainer, true)} />\n            </Switch>\n        </Layout>\n        /*<Layout>\n            <Switch>\n                <Route path=\"/\" exact component={Auth(Home,null)}/>\n                <Route path=\"/login\" exact component={Auth(Login,false)}/>\n                <Route path=\"/user/logout\" exact component={Auth(Logout,true)}/>\n                <Route path=\"/user\" exact component={Auth(User,true)}/>\n                <Route path=\"/user/add\" exact component={Auth(AddReview,true)}/>\n                <Route path=\"/user/register\" exact component={Auth(Register,true)}/>\n                <Route path=\"/user/edit-post/:id\" exact component={Auth(EditReview,true)}/>\n                <Route path=\"/books/:id\" exact component={Auth(BookView,null)}/>\n                <Route path=\"/user/user-reviews\" exact component={Auth(UserPosts,true)}/>\n            </Switch>\n        </Layout>*/\n    );\n};\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nimport reducers from './reducers'; \nimport Routes from './routes';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware,ReduxThunk)(createStore)\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(reducers)}>\n        <BrowserRouter>\n            <Routes/>\n        </BrowserRouter>\n    </Provider>\n    ,document.getElementById('root'));"],"sourceRoot":""}